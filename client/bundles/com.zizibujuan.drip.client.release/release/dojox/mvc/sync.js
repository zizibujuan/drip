//>>built
define("dojox/mvc/sync",["dojo/_base/lang","dojo/_base/config","dojo/_base/array","dojo/has"],function(lang,config,array,has){function equals(dst,src){return dst===src||typeof dst=="number"&&isNaN(dst)&&typeof src=="number"&&isNaN(src)||lang.isFunction((dst||{}).getTime)&&lang.isFunction((src||{}).getTime)&&dst.getTime()==src.getTime()||(lang.isFunction((dst||{}).equals)?dst.equals(src):lang.isFunction((src||{}).equals)?src.equals(dst):!1)}function copy(convertFunc,constraints,source,sourceProp,target,targetProp,old,current,excludes){if(sync.equals(current,old)||sourceProp=="*"&&array.indexOf(source.get("properties")||[targetProp],targetProp)<0||sourceProp=="*"&&targetProp in(excludes||{}))return;var prop=sourceProp=="*"?targetProp:sourceProp;if(has("mvc-bindings-log-api"))var logContent=getLogContent(source,prop,target,targetProp);try{current=convertFunc?convertFunc(current,constraints):current}catch(e){has("mvc-bindings-log-api")&&0;return}has("mvc-bindings-log-api")&&0,lang.isFunction(source.set)?source.set(prop,current):source[prop]=current}var mvc=lang.getObject("dojox.mvc",!0);has.add("mvc-bindings-log-api",(config.mvc||{}).debugBindings);var sync;if(has("mvc-bindings-log-api"))function getLogContent(source,sourceProp,target,targetProp){return[[target.canConvertToLoggable||!target.declaredClass?target:target.declaredClass,targetProp].join(":"),[source.canConvertToLoggable||!source.declaredClass?source:source.declaredClass,sourceProp].join(":")]}var directions={from:1,to:2,both:3},undef;return sync=function(source,sourceProp,target,targetProp,options){var converter=(options||{}).converter,converterInstance,formatFunc,parseFunc;converter&&(converterInstance={source:source,target:target},formatFunc=converter.format&&lang.hitch(converterInstance,converter.format),parseFunc=converter.parse&&lang.hitch(converterInstance,converter.parse));var _watchHandles=[],excludes=[],list,constraints=lang.mixin({},source.constraints,target.constraints),bindDirection=(options||{}).bindDirection||mvc.both;if(has("mvc-bindings-log-api"))var logContent=getLogContent(source,sourceProp,target,targetProp);if(targetProp=="*"){if(sourceProp!="*")throw new Error("Unmatched wildcard is specified between source and target.");list=target.get("properties");if(!list){list=[];for(var s in target)target.hasOwnProperty(s)&&s!="_watchCallbacks"&&list.push(s)}excludes=target.get("excludes")}else list=[sourceProp];bindDirection&mvc.from&&(lang.isFunction(source.set)&&lang.isFunction(source.watch)?_watchHandles.push(source.watch.apply(source,(sourceProp!="*"?[sourceProp]:[]).concat([function(name,old,current){copy(formatFunc,constraints,target,targetProp,source,name,old,current,excludes)}]))):has("mvc-bindings-log-api")&&0,array.forEach(list,function(prop){if(targetProp!="*"||!(prop in(excludes||{}))){var value=lang.isFunction(source.get)?source.get(prop):source[prop];copy(formatFunc,constraints,target,targetProp=="*"?prop:targetProp,source,prop,undef,value)}})),bindDirection&mvc.to&&(bindDirection&mvc.from||array.forEach(list,function(prop){if(targetProp!="*"||!(prop in(excludes||{}))){var value=lang.isFunction(target.get)?target.get(targetProp):target[targetProp];copy(parseFunc,constraints,source,prop,target,targetProp=="*"?prop:targetProp,undef,value)}}),lang.isFunction(target.set)&&lang.isFunction(target.watch)?_watchHandles.push(target.watch.apply(target,(targetProp!="*"?[targetProp]:[]).concat([function(name,old,current){copy(parseFunc,constraints,source,sourceProp,target,name,old,current,excludes)}]))):has("mvc-bindings-log-api")&&0),has("mvc-bindings-log-api")&&0;var handle={};return handle.unwatch=handle.remove=function(){for(var h=null;h=_watchHandles.pop();)h.unwatch();has("mvc-bindings-log-api")&&0},handle},lang.mixin(mvc,directions),lang.setObject("dojox.mvc.sync",lang.mixin(sync,{equals:equals},directions))})