//>>built
define("dojox/dtl/tag/loader",["dojo/_base/lang","../_base","dojo/_base/array","dojo/_base/connect"],function(lang,dd,array,connect){lang.getObject("dojox.dtl.tag.loader",!0);var ddtl=dd.tag.loader;return ddtl.BlockNode=lang.extend(function(name,nodelist){this.name=name,this.nodelist=nodelist},{"super":function(){if(this.parent){var html=this.parent.nodelist.dummyRender(this.context,null,!0);return typeof html=="string"&&(html=new String(html)),html.safe=!0,html}return""},render:function(context,buffer){var name=this.name,nodelist=this.nodelist,parent;if(buffer.blocks){var block=buffer.blocks[name];block&&(parent=block.parent,nodelist=block.nodelist,block.used=!0)}this.rendered=nodelist,context=context.push(),this.context=context,this.parent=null,nodelist!=this.nodelist&&(this.parent=this),context.block=this;if(buffer.getParent)var bufferParent=buffer.getParent(),setParent=connect.connect(buffer,"onSetParent",function(node,up,root){up&&root&&buffer.setParent(bufferParent)});return buffer=nodelist.render(context,buffer,this),setParent&&connect.disconnect(setParent),context=context.pop(),buffer},unrender:function(context,buffer){return this.rendered.unrender(context,buffer)},clone:function(buffer){return new this.constructor(this.name,this.nodelist.clone(buffer))},toString:function(){return"dojox.dtl.tag.loader.BlockNode"}}),ddtl.ExtendsNode=lang.extend(function(getTemplate,nodelist,shared,parent,key){this.getTemplate=getTemplate,this.nodelist=nodelist,this.shared=shared,this.parent=parent,this.key=key},{parents:{},getParent:function(context){var parent=this.parent;if(!parent){var string;parent=this.parent=context.get(this.key,!1);if(!parent)throw new Error("extends tag used a variable that did not resolve");if(typeof parent=="object"){var url=parent.url||parent.templatePath;parent.shared&&(this.shared=!0),url?parent=this.parent=url.toString():parent.templateString?(string=parent.templateString,parent=this.parent=" "):parent=this.parent=this.parent.toString()}parent&&parent.indexOf("shared:")===0&&(this.shared=!0,parent=this.parent=parent.substring(7,parent.length))}if(!parent)throw new Error("Invalid template name in 'extends' tag.");return parent.render?parent:this.parents[parent]?this.parents[parent]:(this.parent=this.getTemplate(string||dojox.dtl.text.getTemplateString(parent)),this.shared&&(this.parents[parent]=this.parent),this.parent)},render:function(context,buffer){var parent=this.getParent(context);parent.blocks=parent.blocks||{},buffer.blocks=buffer.blocks||{};for(var i=0,node;node=this.nodelist.contents[i];i++)if(node instanceof dojox.dtl.tag.loader.BlockNode){var old=parent.blocks[node.name];old&&old.nodelist!=node.nodelist&&(buffer=old.nodelist.unrender(context,buffer)),parent.blocks[node.name]=buffer.blocks[node.name]={shared:this.shared,nodelist:node.nodelist,used:!1}}return this.rendered=parent,parent.nodelist.render(context,buffer,this)},unrender:function(context,buffer){return this.rendered.unrender(context,buffer,this)},toString:function(){return"dojox.dtl.block.ExtendsNode"}}),ddtl.IncludeNode=lang.extend(function(path,constant,getTemplate,text,parsed){this._path=path,this.constant=constant,this.path=constant?path:new dd._Filter(path),this.getTemplate=getTemplate,this.text=text,this.parsed=arguments.length==5?parsed:!0},{_cache:[{},{}],render:function(context,buffer){var location=(this.constant?this.path:this.path.resolve(context)).toString(),parsed=Number(this.parsed),dirty=!1;location!=this.last&&(dirty=!0,this.last&&(buffer=this.unrender(context,buffer)),this.last=location);var cache=this._cache[parsed];if(parsed){cache[location]||(cache[location]=dd.text._resolveTemplateArg(location,!0));if(dirty){var template=this.getTemplate(cache[location]);this.rendered=template.nodelist}return this.rendered.render(context,buffer,this)}if(this.text instanceof dd._TextNode)return dirty&&(this.rendered=this.text,this.rendered.set(dd.text._resolveTemplateArg(location,!0))),this.rendered.render(context,buffer);if(!cache[location]){var nodelist=[],div=document.createElement("div");div.innerHTML=dd.text._resolveTemplateArg(location,!0);var children=div.childNodes;while(children.length){var removed=div.removeChild(children[0]);nodelist.push(removed)}cache[location]=nodelist}if(dirty){this.nodelist=[];var exists=!0;for(var i=0,child;child=cache[location][i];i++)this.nodelist.push(child.cloneNode(!0))}for(var i=0,node;node=this.nodelist[i];i++)buffer=buffer.concat(node);return buffer},unrender:function(context,buffer){this.rendered&&(buffer=this.rendered.unrender(context,buffer));if(this.nodelist)for(var i=0,node;node=this.nodelist[i];i++)buffer=buffer.remove(node);return buffer},clone:function(buffer){return new this.constructor(this._path,this.constant,this.getTemplate,this.text.clone(buffer),this.parsed)}}),lang.mixin(ddtl,{block:function(parser,token){var parts=token.contents.split(),name=parts[1];parser._blocks=parser._blocks||{},parser._blocks[name]=parser._blocks[name]||[],parser._blocks[name].push(name);var nodelist=parser.parse(["endblock","endblock "+name]).rtrim();return parser.next_token(),new dojox.dtl.tag.loader.BlockNode(name,nodelist)},extends_:function(parser,token){var parts=token.contents.split(),shared=!1,parent=null,key=null;parts[1].charAt(0)=='"'||parts[1].charAt(0)=="'"?parent=parts[1].substring(1,parts[1].length-1):key=parts[1],parent&&parent.indexOf("shared:")==0&&(shared=!0,parent=parent.substring(7,parent.length));var nodelist=parser.parse();return new dojox.dtl.tag.loader.ExtendsNode(parser.getTemplate,nodelist,shared,parent,key)},include:function(parser,token){var parts=token.contents.split();if(parts.length!=2)throw new Error(parts[0]+" tag takes one argument: the name of the template to be included");var path=parts[1],constant=!1;return(path.charAt(0)=='"'||path.slice(-1)=="'")&&path.charAt(0)==path.slice(-1)&&(path=path.slice(1,-1),constant=!0),new ddtl.IncludeNode(path,constant,parser.getTemplate,parser.create_text_node())},ssi:function(parser,token){var parts=token.contents.split(),parsed=!1;if(parts.length==3){parsed=parts.pop()=="parsed";if(!parsed)throw new Error("Second (optional) argument to ssi tag must be 'parsed'")}var node=ddtl.include(parser,new dd.Token(token.token_type,parts.join(" ")));return node.parsed=parsed,node}}),dojox.dtl.tag.loader})