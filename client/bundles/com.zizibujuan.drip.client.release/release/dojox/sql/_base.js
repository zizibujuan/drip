//>>built
define("dojox/sql/_base",["dojo","dijit","dojox","dojo/require!dojox/sql/_crypto"],function(dojo,dijit,dojox){dojo.provide("dojox.sql._base"),dojo.require("dojox.sql._crypto"),dojo.mixin(dojox.sql,{dbName:null,debug:dojo.exists("dojox.sql.debug")?dojox.sql.debug:!1,open:function(dbName){if(this._dbOpen&&(!dbName||dbName==this.dbName))return;this.dbName||(this.dbName="dot_store_"+window.location.href.replace(/[^0-9A-Za-z_]/g,"_"),this.dbName.length>63&&(this.dbName=this.dbName.substring(0,63))),dbName||(dbName=this.dbName);try{this._initDb(),this.db.open(dbName),this._dbOpen=!0}catch(exp){throw exp.message||exp}},close:function(dbName){if(dojo.isIE)return;if(!this._dbOpen&&(!dbName||dbName==this.dbName))return;dbName||(dbName=this.dbName);try{this.db.close(dbName),this._dbOpen=!1}catch(exp){throw exp.message||exp}},_exec:function(params){try{this._initDb(),this._dbOpen||(this.open(),this._autoClose=!0);var sql=null,callback=null,password=null,args=dojo._toArray(params);sql=args.splice(0,1)[0];if(this._needsEncrypt(sql)||this._needsDecrypt(sql))callback=args.splice(args.length-1,1)[0],password=args.splice(args.length-1,1)[0];this.debug&&this._printDebugSQL(sql,args);var crypto;if(this._needsEncrypt(sql))return crypto=new dojox.sql._SQLCrypto("encrypt",sql,password,args,callback),null;if(this._needsDecrypt(sql))return crypto=new dojox.sql._SQLCrypto("decrypt",sql,password,args,callback),null;var rs=this.db.execute(sql,args);return rs=this._normalizeResults(rs),this._autoClose&&this.close(),rs}catch(exp){exp=exp.message||exp,0;if(this._autoClose)try{this.close()}catch(e){0}throw exp}return null},_initDb:function(){if(!this.db)try{this.db=google.gears.factory.create("beta.database","1.0")}catch(exp){throw dojo.setObject("google.gears.denied",!0),dojox.off&&dojox.off.onFrameworkEvent("coreOperationFailed"),"Google Gears must be allowed to run"}},_printDebugSQL:function(sql,args){var msg='dojox.sql("'+sql+'"';for(var i=0;i<args.length;i++)typeof args[i]=="string"?msg+=', "'+args[i]+'"':msg+=", "+args[i];msg+=")",0},_normalizeResults:function(rs){var results=[];if(!rs)return[];while(rs.isValidRow()){var row={};for(var i=0;i<rs.fieldCount();i++){var fieldName=rs.fieldName(i),fieldValue=rs.field(i);row[fieldName]=fieldValue}results.push(row),rs.next()}return rs.close(),results},_needsEncrypt:function(sql){return/encrypt\([^\)]*\)/i.test(sql)},_needsDecrypt:function(sql){return/decrypt\([^\)]*\)/i.test(sql)}}),dojo.declare("dojox.sql._SQLCrypto",null,{constructor:function(action,sql,password,args,callback){action=="encrypt"?this._execEncryptSQL(sql,password,args,callback):this._execDecryptSQL(sql,password,args,callback)},_execEncryptSQL:function(sql,password,args,callback){var strippedSQL=this._stripCryptoSQL(sql),encryptColumns=this._flagEncryptedArgs(sql,args),self=this;this._encrypt(strippedSQL,password,args,encryptColumns,function(finalArgs){var error=!1,resultSet=[],exp=null;try{resultSet=dojox.sql.db.execute(strippedSQL,finalArgs)}catch(execError){error=!0,exp=execError.message||execError}if(exp!=null){if(dojox.sql._autoClose)try{dojox.sql.close()}catch(e){}callback(null,!0,exp.toString());return}resultSet=dojox.sql._normalizeResults(resultSet),dojox.sql._autoClose&&dojox.sql.close();if(dojox.sql._needsDecrypt(sql)){var needsDecrypt=self._determineDecryptedColumns(sql);self._decrypt(resultSet,needsDecrypt,password,function(finalResultSet){callback(finalResultSet,!1,null)})}else callback(resultSet,!1,null)})},_execDecryptSQL:function(sql,password,args,callback){var strippedSQL=this._stripCryptoSQL(sql),needsDecrypt=this._determineDecryptedColumns(sql),error=!1,resultSet=[],exp=null;try{resultSet=dojox.sql.db.execute(strippedSQL,args)}catch(execError){error=!0,exp=execError.message||execError}if(exp!=null){if(dojox.sql._autoClose)try{dojox.sql.close()}catch(e){}callback(resultSet,!0,exp.toString());return}resultSet=dojox.sql._normalizeResults(resultSet),dojox.sql._autoClose&&dojox.sql.close(),this._decrypt(resultSet,needsDecrypt,password,function(finalResultSet){callback(finalResultSet,!1,null)})},_encrypt:function(sql,password,args,encryptColumns,callback){this._totalCrypto=0,this._finishedCrypto=0,this._finishedSpawningCrypto=!1,this._finalArgs=args;for(var i=0;i<args.length;i++)if(encryptColumns[i]){var sqlParam=args[i],paramIndex=i;this._totalCrypto++,dojox.sql._crypto.encrypt(sqlParam,password,dojo.hitch(this,function(results){this._finalArgs[paramIndex]=results,this._finishedCrypto++,this._finishedCrypto>=this._totalCrypto&&this._finishedSpawningCrypto&&callback(this._finalArgs)}))}this._finishedSpawningCrypto=!0},_decrypt:function(resultSet,needsDecrypt,password,callback){this._totalCrypto=0,this._finishedCrypto=0,this._finishedSpawningCrypto=!1,this._finalResultSet=resultSet;for(var i=0;i<resultSet.length;i++){var row=resultSet[i];for(var columnName in row)if(needsDecrypt=="*"||needsDecrypt[columnName]){this._totalCrypto++;var columnValue=row[columnName];this._decryptSingleColumn(columnName,columnValue,password,i,function(finalResultSet){callback(finalResultSet)})}}this._finishedSpawningCrypto=!0},_stripCryptoSQL:function(sql){sql=sql.replace(/DECRYPT\(\*\)/ig,"*");var matches=sql.match(/ENCRYPT\([^\)]*\)/ig);if(matches!=null)for(var i=0;i<matches.length;i++){var encryptStatement=matches[i],encryptValue=encryptStatement.match(/ENCRYPT\(([^\)]*)\)/i)[1];sql=sql.replace(encryptStatement,encryptValue)}matches=sql.match(/DECRYPT\([^\)]*\)/ig);if(matches!=null)for(i=0;i<matches.length;i++){var decryptStatement=matches[i],decryptValue=decryptStatement.match(/DECRYPT\(([^\)]*)\)/i)[1];sql=sql.replace(decryptStatement,decryptValue)}return sql},_flagEncryptedArgs:function(sql,args){var tester=new RegExp(/([\"][^\"]*\?[^\"]*[\"])|([\'][^\']*\?[^\']*[\'])|(\?)/ig),matches,currentParam=0,results=[];while((matches=tester.exec(sql))!=null){var currentMatch=RegExp.lastMatch+"";if(/^[\"\']/.test(currentMatch))continue;var needsEncrypt=!1;/ENCRYPT\([^\)]*$/i.test(RegExp.leftContext)&&(needsEncrypt=!0),results[currentParam]=needsEncrypt,currentParam++}return results},_determineDecryptedColumns:function(sql){var results={};if(/DECRYPT\(\*\)/i.test(sql))results="*";else{var tester=/DECRYPT\((?:\s*\w*\s*\,?)*\)/ig,matches=tester.exec(sql);while(matches){var lastMatch=new String(RegExp.lastMatch),columnNames=lastMatch.replace(/DECRYPT\(/i,"");columnNames=columnNames.replace(/\)/,""),columnNames=columnNames.split(/\s*,\s*/),dojo.forEach(columnNames,function(column){/\s*\w* AS (\w*)/i.test(column)&&(column=column.match(/\s*\w* AS (\w*)/i)[1]),results[column]=!0}),matches=tester.exec(sql)}}return results},_decryptSingleColumn:function(columnName,columnValue,password,currentRowIndex,callback){dojox.sql._crypto.decrypt(columnValue,password,dojo.hitch(this,function(results){this._finalResultSet[currentRowIndex][columnName]=results,this._finishedCrypto++,this._finishedCrypto>=this._totalCrypto&&this._finishedSpawningCrypto&&callback(this._finalResultSet)}))}}),function(){var orig_sql=dojox.sql;dojox.sql=new Function("return dojox.sql._exec(arguments);"),dojo.mixin(dojox.sql,orig_sql)}()})