//>>built
define("dojox/collections/Dictionary",["dojo/_base/kernel","dojo/_base/array","./_base"],function(dojo,darray,dxc){return dxc.Dictionary=function(dictionary){var items={};this.count=0;var testObject={};this.add=function(k,v){var b=k in items;items[k]=new dxc.DictionaryEntry(k,v),b||this.count++},this.clear=function(){items={},this.count=0},this.clone=function(){return new dxc.Dictionary(this)},this.contains=this.containsKey=function(k){return testObject[k]?!1:items[k]!=null},this.containsValue=function(v){var e=this.getIterator();while(e.get())if(e.element.value==v)return!0;return!1},this.entry=function(k){return items[k]},this.forEach=function(fn,scope){var a=[];for(var p in items)testObject[p]||a.push(items[p]);dojo.forEach(a,fn,scope)},this.getKeyList=function(){return this.getIterator().map(function(entry){return entry.key})},this.getValueList=function(){return this.getIterator().map(function(entry){return entry.value})},this.item=function(k){return k in items?items[k].valueOf():undefined},this.getIterator=function(){return new dxc.DictionaryIterator(items)},this.remove=function(k){return k in items&&!testObject[k]?(delete items[k],this.count--,!0):!1};if(dictionary){var e=dictionary.getIterator();while(e.get())this.add(e.element.key,e.element.value)}},dxc.Dictionary})