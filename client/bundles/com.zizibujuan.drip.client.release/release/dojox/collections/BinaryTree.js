//>>built
define("dojox/collections/BinaryTree",["dojo/_base/kernel","dojo/_base/array","./_base"],function(dojo,darray,dxc){return dxc.BinaryTree=function(data){function node(data,rnode,lnode){this.value=data||null,this.right=rnode||null,this.left=lnode||null,this.clone=function(){var c=new node;return this.value.value?c.value=this.value.clone():c.value=this.value,this.left!=null&&(c.left=this.left.clone()),this.right!=null&&(c.right=this.right.clone()),c},this.compare=function(n){return this.value>n.value?1:this.value<n.value?-1:0},this.compareData=function(d){return this.value>d?1:this.value<d?-1:0}}function inorderTraversalBuildup(current,a){current&&(inorderTraversalBuildup(current.left,a),a.push(current.value),inorderTraversalBuildup(current.right,a))}function preorderTraversal(current,sep){var s="";return current&&(s=current.value.toString()+sep,s+=preorderTraversal(current.left,sep),s+=preorderTraversal(current.right,sep)),s}function inorderTraversal(current,sep){var s="";return current&&(s=inorderTraversal(current.left,sep),s+=current.value.toString()+sep,s+=inorderTraversal(current.right,sep)),s}function postorderTraversal(current,sep){var s="";return current&&(s=postorderTraversal(current.left,sep),s+=postorderTraversal(current.right,sep),s+=current.value.toString()+sep),s}function searchHelper(current,data){if(!current)return null;var i=current.compareData(data);return i==0?current:i>0?searchHelper(current.left,data):searchHelper(current.right,data)}this.add=function(data){var n=new node(data),i,current=root,parent=null;while(current){i=current.compare(n);if(i==0)return;parent=current,i>0?current=current.left:current=current.right}this.count++,parent?(i=parent.compare(n),i>0?parent.left=n:parent.right=n):root=n},this.clear=function(){root=null,this.count=0},this.clone=function(){var c=new dxc.BinaryTree,itr=this.getIterator();while(!itr.atEnd())c.add(itr.get());return c},this.contains=function(data){return this.search(data)!=null},this.deleteData=function(data){var current=root,parent=null,i=current.compareData(data);while(i!=0&&current!=null)i>0?(parent=current,current=current.left):i<0&&(parent=current,current=current.right),i=current.compareData(data);if(!current)return;this.count--;if(!current.right)parent?(i=parent.compare(current),i>0?parent.left=current.left:i<0&&(parent.right=current.left)):root=current.left;else if(!current.right.left)parent?(i=parent.compare(current),i>0?parent.left=current.right:i<0&&(parent.right=current.right)):root=current.right;else{var leftmost=current.right.left,lmParent=current.right;while(leftmost.left!=null)lmParent=leftmost,leftmost=leftmost.left;lmParent.left=leftmost.right,leftmost.left=current.left,leftmost.right=current.right,parent?(i=parent.compare(current),i>0?parent.left=leftmost:i<0&&(parent.right=leftmost)):root=leftmost}},this.getIterator=function(){var a=[];return inorderTraversalBuildup(root,a),new dxc.Iterator(a)},this.search=function(data){return searchHelper(root,data)},this.toString=function(order,sep){order||(order=dxc.BinaryTree.TraversalMethods.Inorder),sep||(sep=",");var s="";switch(order){case dxc.BinaryTree.TraversalMethods.Preorder:s=preorderTraversal(root,sep);break;case dxc.BinaryTree.TraversalMethods.Inorder:s=inorderTraversal(root,sep);break;case dxc.BinaryTree.TraversalMethods.Postorder:s=postorderTraversal(root,sep)}return s.length==0?"":s.substring(0,s.length-sep.length)},this.count=0;var root=this.root=null;data&&this.add(data)},dxc.BinaryTree.TraversalMethods={Preorder:1,Inorder:2,Postorder:3},dxc.BinaryTree})