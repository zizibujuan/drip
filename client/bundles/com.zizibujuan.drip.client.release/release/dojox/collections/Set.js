//>>built
define("dojox/collections/Set",["./_base","./ArrayList"],function(dxc,ArrayList){return dxc.Set=new function(){function conv(arr){return arr.constructor==Array?new ArrayList(arr):arr}this.union=function(setA,setB){setA=conv(setA),setB=conv(setB);var result=new ArrayList(setA.toArray()),e=setB.getIterator();while(!e.atEnd()){var item=e.get();result.contains(item)||result.add(item)}return result},this.intersection=function(setA,setB){setA=conv(setA),setB=conv(setB);var result=new ArrayList,e=setB.getIterator();while(!e.atEnd()){var item=e.get();setA.contains(item)&&result.add(item)}return result},this.difference=function(setA,setB){setA=conv(setA),setB=conv(setB);var result=new ArrayList,e=setA.getIterator();while(!e.atEnd()){var item=e.get();setB.contains(item)||result.add(item)}return result},this.isSubSet=function(setA,setB){setA=conv(setA),setB=conv(setB);var e=setA.getIterator();while(!e.atEnd())if(!setB.contains(e.get()))return!1;return!0},this.isSuperSet=function(setA,setB){setA=conv(setA),setB=conv(setB);var e=setB.getIterator();while(!e.atEnd())if(!setA.contains(e.get()))return!1;return!0}},dxc.Set})