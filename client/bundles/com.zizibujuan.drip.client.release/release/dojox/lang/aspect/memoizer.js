//>>built
define("dojox/lang/aspect/memoizer",["dojo","dijit","dojox"],function(dojo,dijit,dojox){dojo.provide("dojox.lang.aspect.memoizer"),function(){var aop=dojox.lang.aspect,memoize1={around:function(key){var ctx=aop.getContext(),self=ctx.joinPoint,that=ctx.instance,t,u,ret;if((t=that.__memoizerCache)&&(t=t[self.targetName])&&key in t)return t[key];var ret=aop.proceed.apply(null,arguments);return(t=that.__memoizerCache)||(t=that.__memoizerCache={}),(u=t[self.targetName])||(u=t[self.targetName]={}),u[key]=ret}},memoizeN=function(keyMaker){return{around:function(){var ctx=aop.getContext(),self=ctx.joinPoint,that=ctx.instance,t,u,ret,key=keyMaker.apply(that,arguments);if((t=that.__memoizerCache)&&(t=t[self.targetName])&&key in t)return t[key];var ret=aop.proceed.apply(null,arguments);return(t=that.__memoizerCache)||(t=that.__memoizerCache={}),(u=t[self.targetName])||(u=t[self.targetName]={}),u[key]=ret}}};aop.memoizer=function(keyMaker){return arguments.length==0?memoize1:memoizeN(keyMaker)}}()})