//>>built
define("dojox/lang/observable",["dojo","dijit","dojox"],function(dojo,dijit,dojox){dojo.provide("dojox.lang.observable"),dojo.experimental("dojox.lang.observable"),dojox.lang.observable=function(wrapped,onRead,onWrite,onInvoke){return dojox.lang.makeObservable(onRead,onWrite,onInvoke)(wrapped)},dojox.lang.makeObservable=function(onRead,onWrite,onInvoke,hiddenFunctions){function makeInvoker(scope,wrapped,i){return function(){return onInvoke(scope,wrapped,i,arguments)}}hiddenFunctions=hiddenFunctions||{},onInvoke=onInvoke||function(scope,obj,method,args){return obj[method].apply(scope,args)};if(dojox.lang.lettableWin){var factory=dojox.lang.makeObservable;factory.inc=(factory.inc||0)+1;var getName="gettable_"+factory.inc;dojox.lang.lettableWin[getName]=onRead;var setName="settable_"+factory.inc;dojox.lang.lettableWin[setName]=onWrite;var cache={};return function(wrapped){if(wrapped.__observable)return wrapped.__observable;if(wrapped.data__)throw new Error("Can wrap an object that is already wrapped");var props=[],i,l;for(i in hiddenFunctions)props.push(i);var vbReservedWords={type:1,event:1};for(i in wrapped)i.match(/^[a-zA-Z][\w\$_]*$/)&&!(i in hiddenFunctions)&&!(i in vbReservedWords)&&props.push(i);var signature=props.join(","),prop,clazz=cache[signature];if(!clazz){var tname="dj_lettable_"+factory.inc++,gtname=tname+"_dj_getter",cParts=["Class "+tname,"	Public data__"];for(i=0,l=props.length;i<l;i++){prop=props[i];var type=typeof wrapped[prop];type=="function"||hiddenFunctions[prop]?cParts.push("  Public "+prop):type!="object"&&cParts.push("	Public Property Let "+prop+"(val)","		Call "+setName+'(me.data__,"'+prop+'",val)',"	End Property","	Public Property Get "+prop,"		"+prop+" = "+getName+'(me.data__,"'+prop+'")',"	End Property")}cParts.push("End Class"),cParts.push("Function "+gtname+"()","	Dim tmp","	Set tmp = New "+tname,"	Set "+gtname+" = tmp","End Function"),dojox.lang.lettableWin.vbEval(cParts.join("\n")),cache[signature]=clazz=function(){return dojox.lang.lettableWin.construct(gtname)}}0;var newObj=clazz();newObj.data__=wrapped,0;try{wrapped.__observable=newObj}catch(e){}for(i=0,l=props.length;i<l;i++){prop=props[i];try{var val=wrapped[prop]}catch(e){0}if(typeof val=="function"||hiddenFunctions[prop])newObj[prop]=makeInvoker(newObj,wrapped,prop)}return newObj}}return function(wrapped){if(wrapped.__observable)return wrapped.__observable;var newObj=wrapped instanceof Array?[]:{};newObj.data__=wrapped;for(var i in wrapped)i.charAt(0)!="_"&&(typeof wrapped[i]=="function"?newObj[i]=makeInvoker(newObj,wrapped,i):typeof wrapped[i]!="object"&&function(i){newObj.__defineGetter__(i,function(){return onRead(wrapped,i)}),newObj.__defineSetter__(i,function(value){return onWrite(wrapped,i,value)})}(i));for(i in hiddenFunctions)newObj[i]=makeInvoker(newObj,wrapped,i);return wrapped.__observable=newObj,newObj}};if(!{}.__defineGetter__){if(!dojo.isIE)throw new Error("This browser does not support getters and setters");var frame;document.body?(frame=document.createElement("iframe"),document.body.appendChild(frame)):(document.write("<iframe id='dj_vb_eval_frame'></iframe>"),frame=document.getElementById("dj_vb_eval_frame")),frame.style.display="none";var doc=frame.contentWindow.document;dojox.lang.lettableWin=frame.contentWindow,doc.write('<html><head><script language="VBScript" type="text/VBScript">Function vb_global_eval(code)ExecuteGlobal(code)End Function</script><script type="text/javascript">function vbEval(code){ \nreturn vb_global_eval(code);}function construct(name){ \nreturn window[name]();}</script></head><body>vb-eval</body></html>'),doc.close()}dojox.lang.ReadOnlyProxy=dojox.lang.makeObservable(function(obj,i){return obj[i]},function(obj,i,value){})})