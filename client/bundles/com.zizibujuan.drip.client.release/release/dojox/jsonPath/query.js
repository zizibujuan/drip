//>>built
define("dojox/jsonPath/query",["dojo","dijit","dojox"],function(dojo,dijit,dojox){dojo.provide("dojox.jsonPath.query"),dojox.jsonPath.query=function(obj,expr,arg){function _str(i){return strs[i]}var re=dojox.jsonPath._regularExpressions;arg||(arg={});var strs=[],_strName=_str.name,acc;if(arg.resultType=="PATH"&&arg.evalType=="RESULT")throw Error("RESULT based evaluation not supported with PATH based results");var P={resultType:arg.resultType||"VALUE",normalize:function(expr){var subx=[];expr=expr.replace(/'([^']|'')*'/g,function(t){return _strName+"("+(strs.push(eval(t))-1)+")"});var ll=-1;while(ll!=subx.length)ll=subx.length,expr=expr.replace(/(\??\([^\(\)]*\))/g,function($0){return"#"+(subx.push($0)-1)});expr=expr.replace(/[\['](#[0-9]+)[\]']/g,"[$1]").replace(/'?\.'?|\['?/g,";").replace(/;;;|;;/g,";..;").replace(/;$|'?\]|'$/g,""),ll=-1;while(ll!=expr)ll=expr,expr=expr.replace(/#([0-9]+)/g,function($0,$1){return subx[$1]});return expr.split(";")},asPaths:function(paths){for(var j=0;j<paths.length;j++){var p="$",x=paths[j];for(var i=1,n=x.length;i<n;i++)p+=/^[0-9*]+$/.test(x[i])?"["+x[i]+"]":"['"+x[i]+"']";paths[j]=p}return paths},exec:function(locs,val,rb){function add(v,p,def){v&&v.hasOwnProperty(p)&&P.resultType!="VALUE"&&paths.push(path.concat([p])),def?result=v[p]:v&&v.hasOwnProperty(p)&&result.push(v[p])}function desc(v){result.push(v),paths.push(path),P.walk(v,function(i){if(typeof v[i]=="object"){var oldPath=path;path=path.concat(i),desc(v[i]),path=oldPath}})}function slice(loc,val){if(val instanceof Array){var len=val.length,start=0,end=len,step=1;loc.replace(/^(-?[0-9]*):(-?[0-9]*):?(-?[0-9]*)$/g,function($0,$1,$2,$3){start=parseInt($1||start),end=parseInt($2||end),step=parseInt($3||step)}),start=start<0?Math.max(0,start+len):Math.min(len,start),end=end<0?Math.max(0,end+len):Math.min(len,end);for(var i=start;i<end;i+=step)add(val,i)}}function repStr(str){var i=loc.match(/^_str\(([0-9]+)\)$/);return i?strs[i[1]]:str}function oper(val){if(/^\(.*?\)$/.test(loc))add(val,P.eval(loc,val),rb);else if(loc==="*")P.walk(val,rb&&val instanceof Array?function(i){P.walk(val[i],function(j){add(val[i],j)})}:function(i){add(val,i)});else if(loc==="..")desc(val);else if(/,/.test(loc))for(var s=loc.split(/'?,'?/),i=0,n=s.length;i<n;i++)add(val,repStr(s[i]));else/^\?\(.*?\)$/.test(loc)?P.walk(val,function(i){P.eval(loc.replace(/^\?\((.*?)\)$/,"$1"),val[i])&&add(val,i)}):/^(-?[0-9]*):(-?[0-9]*):?([0-9]*)$/.test(loc)?slice(loc,val):(loc=repStr(loc),rb&&val instanceof Array&&!/^[0-9*]+$/.test(loc)?P.walk(val,function(i){add(val[i],loc)}):add(val,loc,rb))}var path=["$"],result=rb?val:[val],paths=[path];while(locs.length){var loc=locs.shift();if((val=result)===null||val===undefined)return val;result=[];var valPaths=paths;paths=[],rb?oper(val):P.walk(val,function(i){path=valPaths[i]||path,oper(val[i])})}if(P.resultType=="BOTH"){paths=P.asPaths(paths);var newResult=[];for(var i=0;i<paths.length;i++)newResult.push({path:paths[i],value:result[i]});return newResult}return P.resultType=="PATH"?P.asPaths(paths):result},walk:function(val,f){if(val instanceof Array)for(var i=0,n=val.length;i<n;i++)i in val&&f(i);else if(typeof val=="object")for(var m in val)val.hasOwnProperty(m)&&f(m)},eval:function(x,v){try{return $&&v&&eval(x.replace(/@/g,"v"))}catch(e){throw new SyntaxError("jsonPath: "+e.message+": "+x.replace(/@/g,"v").replace(/\^/g,"_a"))}}},$=obj;return expr&&obj?P.exec(P.normalize(expr).slice(1),obj,arg.evalType=="RESULT"):!1}})