//>>built
define("dojox/data/AtomReadStore",["dojo","dojox","dojo/data/util/filter","dojo/data/util/simpleFetch","dojo/date/stamp"],function(dojo,dojox){return dojo.experimental("dojox.data.AtomReadStore"),dojo.declare("dojox.data.AtomReadStore",null,{constructor:function(args){args&&(this.url=args.url,this.rewriteUrl=args.rewriteUrl,this.label=args.label||this.label,this.sendQuery=args.sendQuery||args.sendquery||this.sendQuery,this.unescapeHTML=args.unescapeHTML,"urlPreventCache"in args&&(this.urlPreventCache=args.urlPreventCache?!0:!1));if(!this.url)throw new Error("AtomReadStore: a URL must be specified when creating the data store")},url:"",label:"title",sendQuery:!1,unescapeHTML:!1,urlPreventCache:!1,getValue:function(item,attribute,defaultValue){this._assertIsItem(item),this._assertIsAttribute(attribute),this._initItem(item),attribute=attribute.toLowerCase(),!item._attribs[attribute]&&!item._parsed&&(this._parseItem(item),item._parsed=!0);var retVal=item._attribs[attribute];if(!retVal&&attribute=="summary"){var content=this.getValue(item,"content"),regexp=new RegExp("/(<([^>]+)>)/g","i"),text=content.text.replace(regexp,"");retVal={text:text.substring(0,Math.min(400,text.length)),type:"text"},item._attribs[attribute]=retVal}return retVal&&this.unescapeHTML&&(attribute=="content"||attribute=="summary"||attribute=="subtitle")&&!item["_"+attribute+"Escaped"]&&(retVal.text=this._unescapeHTML(retVal.text),item["_"+attribute+"Escaped"]=!0),retVal?dojo.isArray(retVal)?retVal[0]:retVal:defaultValue},getValues:function(item,attribute){this._assertIsItem(item),this._assertIsAttribute(attribute),this._initItem(item),attribute=attribute.toLowerCase(),item._attribs[attribute]||this._parseItem(item);var retVal=item._attribs[attribute];return retVal?retVal.length!==undefined&&typeof retVal!="string"?retVal:[retVal]:undefined},getAttributes:function(item){this._assertIsItem(item),item._attribs||(this._initItem(item),this._parseItem(item));var attrNames=[];for(var x in item._attribs)attrNames.push(x);return attrNames},hasAttribute:function(item,attribute){return this.getValue(item,attribute)!==undefined},containsValue:function(item,attribute,value){var values=this.getValues(item,attribute);for(var i=0;i<values.length;i++)if(typeof value=="string"){if(values[i].toString&&values[i].toString()===value)return!0}else if(values[i]===value)return!0;return!1},isItem:function(something){return something&&something.element&&something.store&&something.store===this?!0:!1},isItemLoaded:function(something){return this.isItem(something)},loadItem:function(keywordArgs){},getFeatures:function(){var features={"dojo.data.api.Read":!0};return features},getLabel:function(item){if(this.label!==""&&this.isItem(item)){var label=this.getValue(item,this.label);return label&&label.text?label.text:label?label.toString():undefined}return undefined},getLabelAttributes:function(item){return this.label!==""?[this.label]:null},getFeedValue:function(attribute,defaultValue){var values=this.getFeedValues(attribute,defaultValue);return dojo.isArray(values)?values[0]:values},getFeedValues:function(attribute,defaultValue){return this.doc?(this._feedMetaData||(this._feedMetaData={element:this.doc.getElementsByTagName("feed")[0],store:this,_attribs:{}},this._parseItem(this._feedMetaData)),this._feedMetaData._attribs[attribute]||defaultValue):defaultValue},_initItem:function(item){item._attribs||(item._attribs={})},_fetchItems:function(request,fetchHandler,errorHandler){var url=this._getFetchUrl(request);if(!url){errorHandler(new Error("No URL specified."));return}var localRequest=this.sendQuery?null:request,_this=this,docHandler=function(data){_this.doc=data;var items=_this._getItems(data,localRequest),query=request.query;query&&(query.id?items=dojo.filter(items,function(item){return _this.getValue(item,"id")==query.id}):query.category&&(items=dojo.filter(items,function(entry){var cats=_this.getValues(entry,"category");return cats?dojo.some(cats,"return item.term=='"+query.category+"'"):!1}))),items&&items.length>0?fetchHandler(items,request):fetchHandler([],request)};if(this.doc)docHandler(this.doc);else{var getArgs={url:url,handleAs:"xml",preventCache:this.urlPreventCache},getHandler=dojo.xhrGet(getArgs);getHandler.addCallback(docHandler),getHandler.addErrback(function(data){errorHandler(data,request)})}},_getFetchUrl:function(request){if(!this.sendQuery)return this.url;var query=request.query;if(!query)return this.url;if(dojo.isString(query))return this.url+query;var queryString="";for(var name in query){var value=query[name];value&&(queryString&&(queryString+="&"),queryString+=name+"="+value)}if(!queryString)return this.url;var fullUrl=this.url;return fullUrl.indexOf("?")<0?fullUrl+="?":fullUrl+="&",fullUrl+queryString},_getItems:function(document,request){if(this._items)return this._items;var items=[],nodes=[];if(document.childNodes.length<1)return this._items=items,0,items;var feedNodes=dojo.filter(document.childNodes,"return item.tagName && item.tagName.toLowerCase() == 'feed'"),query=request.query;if(!feedNodes||feedNodes.length!=1)return 0,items;nodes=dojo.filter(feedNodes[0].childNodes,"return item.tagName && item.tagName.toLowerCase() == 'entry'"),request.onBegin&&request.onBegin(nodes.length,this.sendQuery?request:{});for(var i=0;i<nodes.length;i++){var node=nodes[i];if(node.nodeType!=1)continue;items.push(this._getItem(node))}return this._items=items,items},close:function(request){},_getItem:function(element){return{element:element,store:this}},_parseItem:function(item){function getNodeText(node){var txt=node.textContent||node.innerHTML||node.innerXML;if(!txt&&node.childNodes[0]){var child=node.childNodes[0];child&&(child.nodeType==3||child.nodeType==4)&&(txt=node.childNodes[0].nodeValue)}return txt}function parseTextAndType(node){return{text:getNodeText(node),type:node.getAttribute("type")}}var attribs=item._attribs,_this=this,text,type;dojo.forEach(item.element.childNodes,function(node){var tagName=node.tagName?node.tagName.toLowerCase():"";switch(tagName){case"title":attribs[tagName]={text:getNodeText(node),type:node.getAttribute("type")};break;case"subtitle":case"summary":case"content":attribs[tagName]=parseTextAndType(node);break;case"author":var nameNode,uriNode;dojo.forEach(node.childNodes,function(child){if(!child.tagName)return;switch(child.tagName.toLowerCase()){case"name":nameNode=child;break;case"uri":uriNode=child}});var author={};nameNode&&nameNode.length==1&&(author.name=getNodeText(nameNode[0])),uriNode&&uriNode.length==1&&(author.uri=getNodeText(uriNode[0])),attribs[tagName]=author;break;case"id":attribs[tagName]=getNodeText(node);break;case"updated":attribs[tagName]=dojo.date.stamp.fromISOString(getNodeText(node));break;case"published":attribs[tagName]=dojo.date.stamp.fromISOString(getNodeText(node));break;case"category":attribs[tagName]||(attribs[tagName]=[]),attribs[tagName].push({scheme:node.getAttribute("scheme"),term:node.getAttribute("term")});break;case"link":attribs[tagName]||(attribs[tagName]=[]);var link={rel:node.getAttribute("rel"),href:node.getAttribute("href"),type:node.getAttribute("type")};attribs[tagName].push(link),link.rel=="alternate"&&(attribs.alternate=link);break;default:}})},_unescapeHTML:function(text){return text=text.replace(/&#8217;/m,"'").replace(/&#8243;/m,'"').replace(/&#60;/m,">").replace(/&#62;/m,"<").replace(/&#38;/m,"&"),text},_assertIsItem:function(item){if(!this.isItem(item))throw new Error("dojox.data.AtomReadStore: Invalid item argument.")},_assertIsAttribute:function(attribute){if(typeof attribute!="string")throw new Error("dojox.data.AtomReadStore: Invalid attribute argument.")}}),dojo.extend(dojox.data.AtomReadStore,dojo.data.util.simpleFetch),dojox.data.AtomReadStore})