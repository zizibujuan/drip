//>>built
define("dojox/data/CouchDBRestStore",["dojo","dojox","dojox/data/JsonRestStore"],function(dojo,dojox){return dojo.declare("dojox.data.CouchDBRestStore",dojox.data.JsonRestStore,{save:function(kwArgs){var actions=this.inherited(arguments),prefix=this.service.servicePath;for(var i=0;i<actions.length;i++)(function(item,dfd){dfd.addCallback(function(result){return result&&(item.__id=prefix+result.id,item._rev=result.rev),result})})(actions[i].content,actions[i].deferred)},fetch:function(args){return args.query=args.query||"_all_docs?",args.start&&(args.query=(args.query?args.query+"&":"")+"skip="+args.start,delete args.start),args.count&&(args.query=(args.query?args.query+"&":"")+"limit="+args.count,delete args.count),this.inherited(arguments)},_processResults:function(results){var rows=results.rows;if(rows){var prefix=this.service.servicePath,self=this;for(var i=0;i<rows.length;i++){var realItem=rows[i].value;realItem.__id=prefix+rows[i].id,realItem._id=rows[i].id,realItem._loadObject=dojox.rpc.JsonRest._loader,rows[i]=realItem}return{totalCount:results.total_rows,items:results.rows}}return{items:results}}}),dojox.data.CouchDBRestStore.getStores=function(couchServerUrl){var dfd=dojo.xhrGet({url:couchServerUrl+"_all_dbs",handleAs:"json",sync:!0}),stores={};return dfd.addBoth(function(dbs){for(var i=0;i<dbs.length;i++)stores[dbs[i]]=new dojox.data.CouchDBRestStore({target:couchServerUrl+dbs[i],idAttribute:"_id"});return stores}),stores},dojox.data.CouchDBRestStore})