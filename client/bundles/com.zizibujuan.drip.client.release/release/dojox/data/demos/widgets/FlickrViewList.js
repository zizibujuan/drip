//>>built
define("dojox/data/demos/widgets/FlickrViewList",["dojo","dijit","dojox","dojo/require!dojox/dtl/_Templated,dijit/_Widget"],function(dojo,dijit,dojox){dojo.provide("dojox.data.demos.widgets.FlickrViewList"),dojo.require("dojox.dtl._Templated"),dojo.require("dijit._Widget"),dojo.declare("dojox.data.demos.widgets.FlickrViewList",[dijit._Widget,dojox.dtl._Templated],{store:null,items:null,templateString:dojo.cache("dojox","data/demos/widgets/templates/FlickrViewList.html",'{% load dojox.dtl.contrib.data %}\n{% bind_data items to store as flickr %}\n<div dojoAttachPoint="list">\n	{% for item in flickr %}\n	<div style="display: inline-block; align: top;">\n		<h5>{{ item.title }}</h5>\n		<a href="{{ item.link }}" style="border: none;">\n			<img src="{{ item.imageUrlMedium }}">\n		</a>\n		<p>{{ item.author }}</p>\n\n		<!--\n		<img src="{{ item.imageUrl }}">\n		<p>{{ item.imageUrl }}</p>\n		<img src="{{ item.imageUrlSmall }}">\n		-->\n	</div>\n	{% endfor %}\n</div>\n\n'),fetch:function(request){return request.onComplete=dojo.hitch(this,"onComplete"),request.onError=dojo.hitch(this,"onError"),this.store.fetch(request)},onError:function(){0,this.items=[],this.render()},onComplete:function(items,request){this.items=items||[],this.render()}})})