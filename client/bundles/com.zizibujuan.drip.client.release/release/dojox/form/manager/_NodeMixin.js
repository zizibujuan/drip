//>>built
define("dojox/form/manager/_NodeMixin",["dojo/_base/lang","dojo/_base/array","dojo/_base/connect","dojo/dom","dojo/dom-attr","dojo/query","./_Mixin","dijit/form/_FormWidget","dijit/_base/manager","dojo/_base/declare"],function(lang,array,connect,dom,domAttr,query,_Mixin,_FormWidget,manager,declare){var fm=lang.getObject("dojox.form.manager",!0),aa=fm.actionAdapter,keys=fm._keys,ce=fm.changeEvent=function(node){var eventName="onclick";switch(node.tagName.toLowerCase()){case"textarea":eventName="onkeyup";break;case"select":eventName="onchange";break;case"input":switch(node.type.toLowerCase()){case"text":case"password":eventName="onkeyup"}}return eventName},registerNode=function(node,groupNode){var name=domAttr.get(node,"name");groupNode=groupNode||this.domNode;if(!name||name in this.formWidgets)name=null;else{for(var n=node;n&&n!==groupNode;n=n.parentNode)if(domAttr.get(n,"widgetId")&&manager.byNode(n).isInstanceOf(_FormWidget))return null;if(node.tagName.toLowerCase()=="input"&&node.type.toLowerCase()=="radio"){var a=this.formNodes[name];a=a&&a.node,a&&lang.isArray(a)?a.push(node):this.formNodes[name]={node:[node],connections:[]}}else this.formNodes[name]={node:node,connections:[]}}return name},getObserversFromNode=function(name){var observers={};return aa(function(_,n){var o=domAttr.get(n,"observer");o&&typeof o=="string"&&array.forEach(o.split(","),function(o){o=lang.trim(o),o&&lang.isFunction(this[o])&&(observers[o]=1)},this)}).call(this,null,this.formNodes[name].node),keys(observers)},connectNode=function(name,observers){var t=this.formNodes[name],c=t.connections;c.length&&(array.forEach(c,connect.disconnect),c=t.connections=[]),aa(function(_,n){var eventName=ce(n);array.forEach(observers,function(o){c.push(connect.connect(n,eventName,this,function(evt){this.watching&&this[o](this.formNodeValue(name),name,n,evt)}))},this)}).call(this,null,t.node)};return declare("dojox.form.manager._NodeMixin",null,{destroy:function(){for(var name in this.formNodes)array.forEach(this.formNodes[name].connections,connect.disconnect);this.formNodes={},this.inherited(arguments)},registerNode:function(node){typeof node=="string"&&(node=dom.byId(node));var name=registerNode.call(this,node);return name&&connectNode.call(this,name,getObserversFromNode.call(this,name)),this},unregisterNode:function(name){return name in this.formNodes&&(array.forEach(this.formNodes[name].connections,this.disconnect,this),delete this.formNodes[name]),this},registerNodeDescendants:function(node){return typeof node=="string"&&(node=dom.byId(node)),query("input, select, textarea, button",node).map(function(n){return registerNode.call(this,n,node)},this).forEach(function(name){name&&connectNode.call(this,name,getObserversFromNode.call(this,name))},this),this},unregisterNodeDescendants:function(node){return typeof node=="string"&&(node=dom.byId(node)),query("input, select, textarea, button",node).map(function(n){return domAttr.get(node,"name")||null}).forEach(function(name){name&&this.unregisterNode(name)},this),this},formNodeValue:function(elem,value){var isSetter=arguments.length==2&&value!==undefined,result;typeof elem=="string"&&(elem=this.formNodes[elem],elem&&(elem=elem.node));if(!elem)return null;if(lang.isArray(elem))return isSetter?(array.forEach(elem,function(node){node.checked=""}),array.forEach(elem,function(node){node.checked=node.value===value?"checked":""}),this):(array.some(elem,function(node){return node.checked?(result=node,!0):!1}),result?result.value:"");switch(elem.tagName.toLowerCase()){case"select":if(elem.multiple){if(isSetter){if(lang.isArray(value)){var dict={};return array.forEach(value,function(v){dict[v]=1}),query("> option",elem).forEach(function(opt){opt.selected=opt.value in dict}),this}return query("> option",elem).forEach(function(opt){opt.selected=opt.value===value}),this}var result=query("> option",elem).filter(function(opt){return opt.selected}).map(function(opt){return opt.value});return result.length==1?result[0]:result}if(isSetter)return query("> option",elem).forEach(function(opt){opt.selected=opt.value===value}),this;return elem.value||"";case"button":if(isSetter)return elem.innerHTML=""+value,this;return elem.innerHTML;case"input":if(elem.type.toLowerCase()=="checkbox")return isSetter?(elem.checked=value?"checked":"",this):Boolean(elem.checked)}return isSetter?(elem.value=""+value,this):elem.value},inspectFormNodes:function(inspector,state,defaultValue){var name,result={};if(state)if(lang.isArray(state))array.forEach(state,function(name){name in this.formNodes&&(result[name]=inspector.call(this,name,this.formNodes[name].node,defaultValue))},this);else for(name in state)name in this.formNodes&&(result[name]=inspector.call(this,name,this.formNodes[name].node,state[name]));else for(name in this.formNodes)result[name]=inspector.call(this,name,this.formNodes[name].node,defaultValue);return result}})})