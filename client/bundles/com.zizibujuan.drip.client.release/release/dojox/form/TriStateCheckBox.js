//>>built
require({cache:{"url:dojox/form/resources/TriStateCheckBox.html":'<div class="dijit dijitReset dijitInline" role="presentation"\n	><div class="dojoxTriStateCheckBoxInner" dojoAttachPoint="stateLabelNode"></div\n	><input ${!nameAttrSetting} type="${type}" role="${type}" dojoAttachPoint="focusNode"\n	class="dijitReset dojoxTriStateCheckBoxInput" dojoAttachEvent="onclick:_onClick"\n/></div>\n'}}),define("dojox/form/TriStateCheckBox",["dojo/_base/kernel","dojo/_base/declare","dojo/_base/array","dojo/_base/lang","dojo/_base/event","dojo/query","dojo/dom-attr","dojo/text!./resources/TriStateCheckBox.html","dijit/form/Button","dijit/form/_ToggleButtonMixin","dojo/NodeList-dom"],function(kernel,declare,array,lang,event,query,domAttr,template,Button,_ToggleButtonMixin){return declare("dojox.form.TriStateCheckBox",[Button,_ToggleButtonMixin],{templateString:template,baseClass:"dojoxTriStateCheckBox",type:"checkbox",states:"",_stateLabels:null,stateValue:null,_currentState:0,_stateType:"False",readOnly:!1,checked:"",_aria_attr:"aria-checked",constructor:function(){this.states=[!1,"mixed",!0],this.checked=!1,this._stateLabels={False:"&#9633;",True:"&#8730;",Mixed:"&#9632;"},this.stateValues={False:!1,True:"on",Mixed:"mixed"}},_fillContent:function(source){},postCreate:function(){domAttr.set(this.stateLabelNode,"innerHTML",this._stateLabels[this._stateType]),this.inherited(arguments)},startup:function(){this.set("checked",this.params.checked||this.states[this._currentState]),domAttr.set(this.stateLabelNode,"innerHTML",this._stateLabels[this._stateType]),this.inherited(arguments)},_setIconClassAttr:null,_setCheckedAttr:function(checked,priorityChange){var stateIndex=array.indexOf(this.states,checked),changed=!1;stateIndex>=0?(this._currentState=stateIndex,this._stateType=this._getStateType(checked),domAttr.set(this.focusNode,"value",this.stateValues[this._stateType]),domAttr.set(this.stateLabelNode,"innerHTML",this._stateLabels[this._stateType]),this.inherited(arguments)):0},setChecked:function(checked){kernel.deprecated("setChecked("+checked+") is deprecated. Use set('checked',"+checked+") instead.","","2.0"),this.set("checked",checked)},_setStatesAttr:function(states){if(lang.isArray(states))this._set("states",states);else if(lang.isString(states)){var map={"true":!0,"false":!1,mixed:"mixed"};states=states.split(/\s*,\s*/);for(var i=0;i<states.length;i++)states[i]=map[states[i]]!==undefined?map[states[i]]:!1;this._set("states",states)}},_setReadOnlyAttr:function(value){this._set("readOnly",value),domAttr.set(this.focusNode,"readOnly",value)},_setValueAttr:function(newValue,priorityChange){typeof newValue=="string"&&array.indexOf(this.states,newValue)<0&&(newValue==""&&(newValue="on"),this.stateValues.True=newValue,newValue=!0),this._created&&(this._currentState=array.indexOf(this.states,newValue),this.set("checked",newValue,priorityChange),domAttr.set(this.focusNode,"value",this.stateValues[this._stateType]))},_setValuesAttr:function(newValues){this.stateValues.True=newValues[0]?newValues[0]:this.stateValues.True,this.stateValues.Mixed=newValues[1]?newValues[1]:this.stateValues.Mixed},_getValueAttr:function(){return this.stateValues[this._stateType]},reset:function(){this._hasBeenBlurred=!1,this.set("states",this.params.states||[!1,"mixed",!0]),this.stateValues=this.params.stateValues||{False:!1,True:"on",Mixed:"mixed"},this.set("values",this.params.values||[]),this.set("checked",this.params.checked||this.states[0])},_onFocus:function(){this.id&&query("label[for='"+this.id+"']").addClass("dijitFocusedLabel"),this.inherited(arguments)},_onBlur:function(){this.id&&query("label[for='"+this.id+"']").removeClass("dijitFocusedLabel"),this.mouseFocus=!1,this.inherited(arguments)},_onClick:function(e){return this.readOnly||this.disabled?(event.stop(e),!1):(this.click(),this.onClick(e))},click:function(){this._currentState>=this.states.length-1?this._currentState=0:this._currentState==-1?this.fixState():this._currentState++;var oldState=this._currentState;this.set("checked",this.states[this._currentState]),this._currentState=oldState,domAttr.set(this.stateLabelNode,"innerHTML",this._stateLabels[this._stateType])},fixState:function(){this._currentState=this.states.length-1},_getStateType:function(state){return state?state=="mixed"?"Mixed":"True":"False"},_onMouseDown:function(){this.mouseFocus=!0}})})