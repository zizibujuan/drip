//>>built
define("dojox/validate/_base",["dojo/_base/lang","dojo/regexp","dojo/number","./regexp"],function(lang,regexp,number,xregexp){var validate=lang.getObject("dojox.validate",!0);return validate.isText=function(value,flags){return flags=typeof flags=="object"?flags:{},/^\s*$/.test(value)?!1:typeof flags.length=="number"&&flags.length!=value.length?!1:typeof flags.minlength=="number"&&flags.minlength>value.length?!1:typeof flags.maxlength=="number"&&flags.maxlength<value.length?!1:!0},validate._isInRangeCache={},validate.isInRange=function(value,flags){value=number.parse(value,flags);if(isNaN(value))return!1;flags=typeof flags=="object"?flags:{};var max=typeof flags.max=="number"?flags.max:Infinity,min=typeof flags.min=="number"?flags.min:-Infinity,dec=typeof flags.decimal=="string"?flags.decimal:".",cache=validate._isInRangeCache,cacheIdx=value+"max"+max+"min"+min+"dec"+dec;return typeof cache[cacheIdx]!="undefined"?cache[cacheIdx]:(cache[cacheIdx]=!(value<min||value>max),cache[cacheIdx])},validate.isNumberFormat=function(value,flags){var re=new RegExp("^"+xregexp.numberFormat(flags)+"$","i");return re.test(value)},validate.isValidLuhn=function(value){var sum=0,parity,curDigit;lang.isString(value)||(value=String(value)),value=value.replace(/[- ]/g,""),parity=value.length%2;for(var i=0;i<value.length;i++)curDigit=parseInt(value.charAt(i)),i%2==parity&&(curDigit*=2),curDigit>9&&(curDigit-=9),sum+=curDigit;return!(sum%10)},validate})