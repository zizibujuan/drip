//>>built
define("dojox/grid/enhanced/plugins/Rearrange",["dojo/_base/kernel","dojo/_base/lang","dojo/_base/declare","dojo/_base/array","dojo/_base/connect","../../EnhancedGrid","../_Plugin","./_RowMapLayer"],function(dojo,lang,declare,array,connect,EnhancedGrid,_Plugin,_RowMapLayer){var Rearrange=declare("dojox.grid.enhanced.plugins.Rearrange",_Plugin,{name:"rearrange",constructor:function(grid,args){this.grid=grid,this.setArgs(args);var rowMapLayer=new _RowMapLayer(grid);dojox.grid.enhanced.plugins.wrap(grid,"_storeLayerFetch",rowMapLayer)},setArgs:function(args){this.args=lang.mixin(this.args||{},args||{}),this.args.setIdentifierForNewItem=this.args.setIdentifierForNewItem||function(v){return v}},destroy:function(){this.inherited(arguments),this.grid.unwrap("rowmap")},onSetStore:function(store){this.grid.layer("rowmap").clearMapping()},_hasIdentity:function(points){var g=this.grid,s=g.store,cells=g.layout.cells;return s.getFeatures()["dojo.data.api.Identity"]&&array.some(points,function(point){return s.getIdentityAttributes(g._by_idx[point.r].item)==cells[point.c].field})?!0:!1},moveColumns:function(colsToMove,targetPos){var g=this.grid,layout=g.layout,cells=layout.cells,colIndex,i,delta=0,before=!0,tmp={},mapping={};colsToMove.sort(function(a,b){return a-b});for(i=0;i<colsToMove.length;++i)tmp[colsToMove[i]]=i,colsToMove[i]<targetPos&&++delta;var leftCount=0,rightCount=0,maxCol=Math.max(colsToMove[colsToMove.length-1],targetPos);maxCol==cells.length&&--maxCol;var minCol=Math.min(colsToMove[0],targetPos);for(i=minCol;i<=maxCol;++i){var j=tmp[i];j>=0?mapping[i]=targetPos-delta+j:i<targetPos?(mapping[i]=minCol+leftCount,++leftCount):i>=targetPos&&(mapping[i]=targetPos+colsToMove.length-delta+rightCount,++rightCount)}delta=0,targetPos==cells.length&&(--targetPos,before=!1),g._notRefreshSelection=!0;for(i=0;i<colsToMove.length;++i)colIndex=colsToMove[i],colIndex<targetPos&&(colIndex-=delta),++delta,colIndex!=targetPos&&(layout.moveColumn(cells[colIndex].view.idx,cells[targetPos].view.idx,colIndex,targetPos,before),cells=layout.cells),targetPos<=colIndex&&++targetPos;delete g._notRefreshSelection,connect.publish("dojox/grid/rearrange/move/"+g.id,["col",mapping,colsToMove])},moveRows:function(rowsToMove,targetPos){var g=this.grid,mapping={},preRowsToMove=[],postRowsToMove=[],len=rowsToMove.length,i,r,k,arr,rowMap,lastPos;for(i=0;i<len;++i){r=rowsToMove[i];if(r>=targetPos)break;preRowsToMove.push(r)}postRowsToMove=rowsToMove.slice(i),arr=preRowsToMove,len=arr.length;if(len){rowMap={},array.forEach(arr,function(r){rowMap[r]=!0}),mapping[arr[0]]=targetPos-len;for(k=0,i=arr[k]+1,lastPos=i-1;i<targetPos;++i)rowMap[i]?(++k,mapping[i]=targetPos-len+k):(mapping[i]=lastPos,++lastPos)}arr=postRowsToMove,len=arr.length;if(len){rowMap={},array.forEach(arr,function(r){rowMap[r]=!0}),mapping[arr[len-1]]=targetPos+len-1;for(k=len-1,i=arr[k]-1,lastPos=i+1;i>=targetPos;--i)rowMap[i]?(--k,mapping[i]=targetPos+k):(mapping[i]=lastPos,--lastPos)}var tmpMapping=lang.clone(mapping);g.layer("rowmap").setMapping(mapping),g.forEachLayer(function(layer){return layer.name()!="rowmap"?(layer.invalidate(),!0):!1},!1),g.selection.selected=[],g._noInternalMapping=!0,g._refresh(),setTimeout(function(){connect.publish("dojox/grid/rearrange/move/"+g.id,["row",tmpMapping,rowsToMove]),g._noInternalMapping=!1},0)},moveCells:function(cellsToMove,target){var g=this.grid,s=g.store;if(s.getFeatures()["dojo.data.api.Write"]){if(cellsToMove.min.row==target.min.row&&cellsToMove.min.col==target.min.col)return;var cells=g.layout.cells,cnt=cellsToMove.max.row-cellsToMove.min.row+1,r,c,tr,tc,sources=[],targets=[];for(r=cellsToMove.min.row,tr=target.min.row;r<=cellsToMove.max.row;++r,++tr)for(c=cellsToMove.min.col,tc=target.min.col;c<=cellsToMove.max.col;++c,++tc){while(cells[c]&&cells[c].hidden)++c;while(cells[tc]&&cells[tc].hidden)++tc;sources.push({r:r,c:c}),targets.push({r:tr,c:tc,v:cells[c].get(r,g._by_idx[r].item)})}if(this._hasIdentity(sources.concat(targets))){0;return}array.forEach(sources,function(point){s.setValue(g._by_idx[point.r].item,cells[point.c].field,"")}),array.forEach(targets,function(point){s.setValue(g._by_idx[point.r].item,cells[point.c].field,point.v)}),s.save({onComplete:function(){connect.publish("dojox/grid/rearrange/move/"+g.id,["cell",{from:cellsToMove,to:target}])}})}},copyCells:function(cellsToMove,target){var g=this.grid,s=g.store;if(s.getFeatures()["dojo.data.api.Write"]){if(cellsToMove.min.row==target.min.row&&cellsToMove.min.col==target.min.col)return;var cells=g.layout.cells,cnt=cellsToMove.max.row-cellsToMove.min.row+1,r,c,tr,tc,targets=[];for(r=cellsToMove.min.row,tr=target.min.row;r<=cellsToMove.max.row;++r,++tr)for(c=cellsToMove.min.col,tc=target.min.col;c<=cellsToMove.max.col;++c,++tc){while(cells[c]&&cells[c].hidden)++c;while(cells[tc]&&cells[tc].hidden)++tc;targets.push({r:tr,c:tc,v:cells[c].get(r,g._by_idx[r].item)})}if(this._hasIdentity(targets)){0;return}array.forEach(targets,function(point){s.setValue(g._by_idx[point.r].item,cells[point.c].field,point.v)}),s.save({onComplete:function(){setTimeout(function(){connect.publish("dojox/grid/rearrange/copy/"+g.id,["cell",{from:cellsToMove,to:target}])},0)}})}},changeCells:function(sourceGrid,cellsToMove,target){var g=this.grid,s=g.store;if(s.getFeatures()["dojo.data.api.Write"]){var srcg=sourceGrid,cells=g.layout.cells,srccells=srcg.layout.cells,cnt=cellsToMove.max.row-cellsToMove.min.row+1,r,c,tr,tc,targets=[];for(r=cellsToMove.min.row,tr=target.min.row;r<=cellsToMove.max.row;++r,++tr)for(c=cellsToMove.min.col,tc=target.min.col;c<=cellsToMove.max.col;++c,++tc){while(srccells[c]&&srccells[c].hidden)++c;while(cells[tc]&&cells[tc].hidden)++tc;targets.push({r:tr,c:tc,v:srccells[c].get(r,srcg._by_idx[r].item)})}if(this._hasIdentity(targets)){0;return}array.forEach(targets,function(point){s.setValue(g._by_idx[point.r].item,cells[point.c].field,point.v)}),s.save({onComplete:function(){connect.publish("dojox/grid/rearrange/change/"+g.id,["cell",target])}})}},clearCells:function(cellsToClear){var g=this.grid,s=g.store;if(s.getFeatures()["dojo.data.api.Write"]){var cells=g.layout.cells,cnt=cellsToClear.max.row-cellsToClear.min.row+1,r,c,targets=[];for(r=cellsToClear.min.row;r<=cellsToClear.max.row;++r)for(c=cellsToClear.min.col;c<=cellsToClear.max.col;++c){while(cells[c]&&cells[c].hidden)++c;targets.push({r:r,c:c})}if(this._hasIdentity(targets)){0;return}array.forEach(targets,function(point){s.setValue(g._by_idx[point.r].item,cells[point.c].field,"")}),s.save({onComplete:function(){connect.publish("dojox/grid/rearrange/change/"+g.id,["cell",cellsToClear])}})}},insertRows:function(sourceGrid,rowsToMove,targetPos){try{var g=this.grid,s=g.store,rowCnt=g.rowCount,mapping={},obj={idx:0},newRows=[],i,emptyTarget=targetPos<0,_this=this,len=rowsToMove.length;if(emptyTarget)targetPos=0;else for(i=targetPos;i<g.rowCount;++i)mapping[i]=i+len;if(s.getFeatures()["dojo.data.api.Write"]){if(sourceGrid){var srcg=sourceGrid,srcs=srcg.store,thisItem,attrs;if(!emptyTarget){for(i=0;!thisItem;++i)thisItem=g._by_idx[i];attrs=s.getAttributes(thisItem.item)}else attrs=array.filter(array.map(g.layout.cells,function(cell){return cell.field}),function(field){return field});var rowsToFetch=[];array.forEach(rowsToMove,function(rowIndex,i){var item={},srcItem=srcg._by_idx[rowIndex];if(srcItem){array.forEach(attrs,function(attr){item[attr]=srcs.getValue(srcItem.item,attr)}),item=_this.args.setIdentifierForNewItem(item,s,rowCnt+obj.idx)||item;try{s.newItem(item),newRows.push(targetPos+i),mapping[rowCnt+obj.idx]=targetPos+i,++obj.idx}catch(e){0}}else rowsToFetch.push(rowIndex)})}else{if(!rowsToMove.length||!lang.isObject(rowsToMove[0]))return;array.forEach(rowsToMove,function(rowData,i){var item=_this.args.setIdentifierForNewItem(rowData,s,rowCnt+obj.idx)||rowData;try{s.newItem(item),newRows.push(targetPos+i),mapping[rowCnt+obj.idx]=targetPos+i,++obj.idx}catch(e){0}})}g.layer("rowmap").setMapping(mapping),s.save({onComplete:function(){g._refresh(),setTimeout(function(){connect.publish("dojox/grid/rearrange/insert/"+g.id,["row",newRows])},0)}})}}catch(e){0}},removeRows:function(rowsToRemove){var g=this.grid,s=g.store;try{array.forEach(array.map(rowsToRemove,function(rowIndex){return g._by_idx[rowIndex]}),function(row){row&&s.deleteItem(row.item)}),s.save({onComplete:function(){connect.publish("dojox/grid/rearrange/remove/"+g.id,["row",rowsToRemove])}})}catch(e){0}},_getPageInfo:function(){var scroller=this.grid.scroller,topPage=scroller.page,bottomPage=scroller.page,firstVisibleRow=scroller.firstVisibleRow,lastVisibleRow=scroller.lastVisibleRow,rowsPerPage=scroller.rowsPerPage,renderedPages=scroller.pageNodes[0],topRow,bottomRow,matched,invalidPages=[];return array.forEach(renderedPages,function(page,pageIndex){if(!page)return;matched=!1,topRow=pageIndex*rowsPerPage,bottomRow=(pageIndex+1)*rowsPerPage-1,firstVisibleRow>=topRow&&firstVisibleRow<=bottomRow&&(topPage=pageIndex,matched=!0),lastVisibleRow>=topRow&&lastVisibleRow<=bottomRow&&(bottomPage=pageIndex,matched=!0),!matched&&(topRow>lastVisibleRow||bottomRow<firstVisibleRow)&&invalidPages.push(pageIndex)}),{topPage:topPage,bottomPage:bottomPage,invalidPages:invalidPages}}});return EnhancedGrid.registerPlugin(Rearrange),Rearrange})