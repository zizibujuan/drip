//>>built
define("dojox/storage/Provider",["dojo","dijit","dojox"],function(dojo,dijit,dojox){dojo.provide("dojox.storage.Provider"),dojo.declare("dojox.storage.Provider",null,{constructor:function(){},SUCCESS:"success",FAILED:"failed",PENDING:"pending",SIZE_NOT_AVAILABLE:"Size not available",SIZE_NO_LIMIT:"No size limit",DEFAULT_NAMESPACE:"default",onHideSettingsUI:null,initialize:function(){0},isAvailable:function(){0},put:function(key,value,resultsHandler,namespace){0},get:function(key,namespace){0},hasKey:function(key,namespace){return!!this.get(key,namespace)},getKeys:function(namespace){0},clear:function(namespace){0},remove:function(key,namespace){0},getNamespaces:function(){0},isPermanent:function(){0},getMaximumSize:function(){0},putMultiple:function(keys,values,resultsHandler,namespace){for(var i=0;i<keys.length;i++)dojox.storage.put(keys[i],values[i],resultsHandler,namespace)},getMultiple:function(keys,namespace){var results=[];for(var i=0;i<keys.length;i++)results.push(dojox.storage.get(keys[i],namespace));return results},removeMultiple:function(keys,namespace){for(var i=0;i<keys.length;i++)dojox.storage.remove(keys[i],namespace)},isValidKeyArray:function(keys){return keys===null||keys===undefined||!dojo.isArray(keys)?!1:!dojo.some(keys,function(key){return!this.isValidKey(key)},this)},hasSettingsUI:function(){return!1},showSettingsUI:function(){0},hideSettingsUI:function(){0},isValidKey:function(keyName){return keyName===null||keyName===undefined?!1:/^[0-9A-Za-z_]*$/.test(keyName)},getResourceList:function(){return[]}})})