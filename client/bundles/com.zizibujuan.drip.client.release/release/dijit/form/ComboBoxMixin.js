//>>built
require({cache:{"url:dijit/form/templates/DropDownBox.html":'<div class="dijit dijitReset dijitInline dijitLeft"\n	id="widget_${id}"\n	role="combobox"\n	aria-haspopup="true"\n	data-dojo-attach-point="_popupStateNode"\n	><div class=\'dijitReset dijitRight dijitButtonNode dijitArrowButton dijitDownArrowButton dijitArrowButtonContainer\'\n		data-dojo-attach-point="_buttonNode" role="presentation"\n		><input class="dijitReset dijitInputField dijitArrowButtonInner" value="&#9660; " type="text" tabIndex="-1" readonly="readonly" role="button presentation" aria-hidden="true"\n			${_buttonInputDisabled}\n	/></div\n	><div class=\'dijitReset dijitValidationContainer\'\n		><input class="dijitReset dijitInputField dijitValidationIcon dijitValidationInner" value="&#935; " type="text" tabIndex="-1" readonly="readonly" role="presentation"\n	/></div\n	><div class="dijitReset dijitInputField dijitInputContainer"\n		><input class=\'dijitReset dijitInputInner\' ${!nameAttrSetting} type="text" autocomplete="off"\n			data-dojo-attach-point="textbox,focusNode" role="textbox"\n	/></div\n></div>\n'}}),define("dijit/form/ComboBoxMixin",["dojo/_base/declare","dojo/Deferred","dojo/_base/kernel","dojo/_base/lang","dojo/store/util/QueryResults","./_AutoCompleterMixin","./_ComboBoxMenu","../_HasDropDown","dojo/text!./templates/DropDownBox.html"],function(declare,Deferred,kernel,lang,QueryResults,_AutoCompleterMixin,_ComboBoxMenu,_HasDropDown,template){return declare("dijit.form.ComboBoxMixin",[_HasDropDown,_AutoCompleterMixin],{dropDownClass:_ComboBoxMenu,hasDownArrow:!0,templateString:template,baseClass:"dijitTextBox dijitComboBox",cssStateNodes:{_buttonNode:"dijitDownArrowButton"},_setHasDownArrowAttr:function(val){this._set("hasDownArrow",val),this._buttonNode.style.display=val?"":"none"},_showResultList:function(){this.displayMessage(""),this.inherited(arguments)},_setStoreAttr:function(store){store.get||lang.mixin(store,{_oldAPI:!0,get:function(id){var deferred=new Deferred;return this.fetchItemByIdentity({identity:id,onItem:function(object){deferred.resolve(object)},onError:function(error){deferred.reject(error)}}),deferred.promise},query:function(query,options){var deferred=new Deferred(function(){fetchHandle.abort&&fetchHandle.abort()});deferred.total=new Deferred;var fetchHandle=this.fetch(lang.mixin({query:query,onBegin:function(count){deferred.total.resolve(count)},onComplete:function(results){deferred.resolve(results)},onError:function(error){deferred.reject(error)}},options));return QueryResults(deferred)}}),this._set("store",store)},postMixInProperties:function(){var store=this.params.store||this.store;store&&this._setStoreAttr(store),this.inherited(arguments);if(!this.params.store&&!this.store._oldAPI){var clazz=this.declaredClass;lang.mixin(this.store,{getValue:function(item,attr){return kernel.deprecated(clazz+".store.getValue(item, attr) is deprecated for builtin store.  Use item.attr directly","","2.0"),item[attr]},getLabel:function(item){return kernel.deprecated(clazz+".store.getLabel(item) is deprecated for builtin store.  Use item.label directly","","2.0"),item.name},fetch:function(args){kernel.deprecated(clazz+".store.fetch() is deprecated for builtin store.","Use store.query()","2.0");var shim=["dojo/data/ObjectStore"];require(shim,lang.hitch(this,function(ObjectStore){(new ObjectStore({objectStore:this})).fetch(args)}))}})}}})})