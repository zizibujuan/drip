//>>built
define("dijit/tree/dndSource",["dojo/_base/array","dojo/_base/connect","dojo/_base/declare","dojo/dom-class","dojo/dom-geometry","dojo/_base/lang","dojo/on","dojo/touch","dojo/topic","dojo/dnd/Manager","./_dndSelector"],function(array,connect,declare,domClass,domGeometry,lang,on,touch,topic,DNDManager,_dndSelector){var dndSource=declare("dijit.tree.dndSource",_dndSelector,{isSource:!0,accept:["text","treeNode"],copyOnly:!1,dragThreshold:5,betweenThreshold:0,generateText:!0,constructor:function(tree,params){params||(params={}),lang.mixin(this,params);var type=params.accept instanceof Array?params.accept:["text","treeNode"];this.accept=null;if(type.length){this.accept={};for(var i=0;i<type.length;++i)this.accept[type[i]]=1}this.isDragging=!1,this.mouseDown=!1,this.targetAnchor=null,this.targetBox=null,this.dropPosition="",this._lastX=0,this._lastY=0,this.sourceState="",this.isSource&&domClass.add(this.node,"dojoDndSource"),this.targetState="",this.accept&&domClass.add(this.node,"dojoDndTarget"),this.topics=[topic.subscribe("/dnd/source/over",lang.hitch(this,"onDndSourceOver")),topic.subscribe("/dnd/start",lang.hitch(this,"onDndStart")),topic.subscribe("/dnd/drop",lang.hitch(this,"onDndDrop")),topic.subscribe("/dnd/cancel",lang.hitch(this,"onDndCancel"))]},checkAcceptance:function(){return!0},copyState:function(keyPressed){return this.copyOnly||keyPressed},destroy:function(){this.inherited(arguments);var h;while(h=this.topics.pop())h.remove();this.targetAnchor=null},_onDragMouse:function(e,firstTime){var m=DNDManager.manager(),oldTarget=this.targetAnchor,newTarget=this.current,oldDropPosition=this.dropPosition,newDropPosition="Over";if(newTarget&&this.betweenThreshold>0){if(!this.targetBox||oldTarget!=newTarget)this.targetBox=domGeometry.position(newTarget.rowNode,!0);e.pageY-this.targetBox.y<=this.betweenThreshold?newDropPosition="Before":e.pageY-this.targetBox.y>=this.targetBox.h-this.betweenThreshold&&(newDropPosition="After")}if(firstTime||newTarget!=oldTarget||newDropPosition!=oldDropPosition){oldTarget&&this._removeItemClass(oldTarget.rowNode,oldDropPosition),newTarget&&this._addItemClass(newTarget.rowNode,newDropPosition);if(!newTarget)m.canDrop(!1);else if(newTarget==this.tree.rootNode&&newDropPosition!="Over")m.canDrop(!1);else{var sameId=!1;if(m.source==this)for(var dragId in this.selection){var dragNode=this.selection[dragId];if(dragNode.item===newTarget.item){sameId=!0;break}}sameId?m.canDrop(!1):this.checkItemAcceptance(newTarget.rowNode,m.source,newDropPosition.toLowerCase())&&!this._isParentChildDrop(m.source,newTarget.rowNode)?m.canDrop(!0):m.canDrop(!1)}this.targetAnchor=newTarget,this.dropPosition=newDropPosition}},onMouseMove:function(e){if(this.isDragging&&this.targetState=="Disabled")return;this.inherited(arguments);var m=DNDManager.manager();if(this.isDragging)this._onDragMouse(e);else if(this.mouseDown&&this.isSource&&(Math.abs(e.pageX-this._lastX)>=this.dragThreshold||Math.abs(e.pageY-this._lastY)>=this.dragThreshold)){var nodes=this.getSelectedTreeNodes();if(nodes.length){if(nodes.length>1){var seen=this.selection,i=0,r=[],n,p;a:while(n=nodes[i++]){for(p=n.getParent();p&&p!==this.tree;p=p.getParent())if(seen[p.id])continue a;r.push(n)}nodes=r}nodes=array.map(nodes,function(n){return n.domNode}),m.startDrag(this,nodes,this.copyState(connect.isCopyKey(e))),this._onDragMouse(e,!0)}}},onMouseDown:function(e){this.mouseDown=!0,this.mouseButton=e.button,this._lastX=e.pageX,this._lastY=e.pageY,this.inherited(arguments)},onMouseUp:function(e){this.mouseDown&&(this.mouseDown=!1,this.inherited(arguments))},onMouseOut:function(){this.inherited(arguments),this._unmarkTargetAnchor()},checkItemAcceptance:function(){return!0},onDndSourceOver:function(source){if(this!=source)this.mouseDown=!1,this._unmarkTargetAnchor();else if(this.isDragging){var m=DNDManager.manager();m.canDrop(!1)}},onDndStart:function(source,nodes,copy){this.isSource&&this._changeState("Source",this==source?copy?"Copied":"Moved":"");var accepted=this.checkAcceptance(source,nodes);this._changeState("Target",accepted?"":"Disabled"),this==source&&DNDManager.manager().overSource(this),this.isDragging=!0},itemCreator:function(nodes){return array.map(nodes,function(node){return{id:node.id,name:node.textContent||node.innerText||""}})},onDndDrop:function(source,nodes,copy){if(this.containerState=="Over"){var tree=this.tree,model=tree.model,target=this.targetAnchor;this.isDragging=!1;var newParentItem,insertIndex,before;newParentItem=target&&target.item||tree.item,this.dropPosition=="Before"||this.dropPosition=="After"?(newParentItem=target.getParent()&&target.getParent().item||tree.item,insertIndex=target.getIndexInParent(),this.dropPosition=="After"?(insertIndex=target.getIndexInParent()+1,before=target.getNextSibling()&&target.getNextSibling().item):before=target.item):newParentItem=target&&target.item||tree.item;var newItemsParams;array.forEach(nodes,function(node,idx){var sourceItem=source.getItem(node.id);if(array.indexOf(sourceItem.type,"treeNode")!=-1)var childTreeNode=sourceItem.data,childItem=childTreeNode.item,oldParentItem=childTreeNode.getParent().item;source==this?(typeof insertIndex=="number"&&newParentItem==oldParentItem&&childTreeNode.getIndexInParent()<insertIndex&&(insertIndex-=1),model.pasteItem(childItem,oldParentItem,newParentItem,copy,insertIndex,before)):model.isItem(childItem)?model.pasteItem(childItem,oldParentItem,newParentItem,copy,insertIndex,before):(newItemsParams||(newItemsParams=this.itemCreator(nodes,target.rowNode,source)),model.newItem(newItemsParams[idx],newParentItem,insertIndex,before))},this),this.tree._expandNode(target)}this.onDndCancel()},onDndCancel:function(){this._unmarkTargetAnchor(),this.isDragging=!1,this.mouseDown=!1,delete this.mouseButton,this._changeState("Source",""),this._changeState("Target","")},onOverEvent:function(){this.inherited(arguments),DNDManager.manager().overSource(this)},onOutEvent:function(){this._unmarkTargetAnchor();var m=DNDManager.manager();this.isDragging&&m.canDrop(!1),m.outSource(this),this.inherited(arguments)},_isParentChildDrop:function(source,targetRow){if(!source.tree||source.tree!=this.tree)return!1;var root=source.tree.domNode,ids=source.selection,node=targetRow.parentNode;while(node!=root&&!ids[node.id])node=node.parentNode;return node.id&&ids[node.id]},_unmarkTargetAnchor:function(){if(!this.targetAnchor)return;this._removeItemClass(this.targetAnchor.rowNode,this.dropPosition),this.targetAnchor=null,this.targetBox=null,this.dropPosition=null},_markDndStatus:function(copy){this._changeState("Source",copy?"Copied":"Moved")}});return dndSource})