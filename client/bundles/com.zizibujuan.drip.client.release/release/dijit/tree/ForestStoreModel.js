//>>built
define("dijit/tree/ForestStoreModel",["dojo/_base/array","dojo/_base/declare","dojo/_base/kernel","dojo/_base/lang","./TreeStoreModel"],function(array,declare,kernel,lang,TreeStoreModel){return declare("dijit.tree.ForestStoreModel",TreeStoreModel,{rootId:"$root$",rootLabel:"ROOT",query:null,constructor:function(params){this.root={store:this,root:!0,id:params.rootId,label:params.rootLabel,children:params.rootChildren}},mayHaveChildren:function(item){return item===this.root||this.inherited(arguments)},getChildren:function(parentItem,callback,onError){parentItem===this.root?this.root.children?callback(this.root.children):this.store.fetch({query:this.query,onComplete:lang.hitch(this,function(items){this.root.children=items,callback(items)}),onError:onError}):this.inherited(arguments)},isItem:function(something){return something===this.root?!0:this.inherited(arguments)},fetchItemByIdentity:function(keywordArgs){if(keywordArgs.identity==this.root.id){var scope=keywordArgs.scope||kernel.global;keywordArgs.onItem&&keywordArgs.onItem.call(scope,this.root)}else this.inherited(arguments)},getIdentity:function(item){return item===this.root?this.root.id:this.inherited(arguments)},getLabel:function(item){return item===this.root?this.root.label:this.inherited(arguments)},newItem:function(args,parent,insertIndex){return parent===this.root?(this.onNewRootItem(args),this.store.newItem(args)):this.inherited(arguments)},onNewRootItem:function(){},pasteItem:function(childItem,oldParentItem,newParentItem,bCopy,insertIndex){oldParentItem===this.root&&(bCopy||this.onLeaveRoot(childItem)),this.inherited(arguments,[childItem,oldParentItem===this.root?null:oldParentItem,newParentItem===this.root?null:newParentItem,bCopy,insertIndex]),newParentItem===this.root&&this.onAddToRoot(childItem)},onAddToRoot:function(item){0},onLeaveRoot:function(item){0},_requeryTop:function(){var oldChildren=this.root.children||[];this.store.fetch({query:this.query,onComplete:lang.hitch(this,function(newChildren){this.root.children=newChildren,(oldChildren.length!=newChildren.length||array.some(oldChildren,function(item,idx){return newChildren[idx]!=item}))&&this.onChildrenChange(this.root,newChildren)})})},onNewItem:function(item,parentInfo){this._requeryTop(),this.inherited(arguments)},onDeleteItem:function(item){array.indexOf(this.root.children,item)!=-1&&this._requeryTop(),this.inherited(arguments)},onSetItem:function(item,attribute,oldValue,newValue){this._requeryTop(),this.inherited(arguments)}})})