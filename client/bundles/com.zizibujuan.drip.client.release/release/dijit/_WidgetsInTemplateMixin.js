//>>built
define("dijit/_WidgetsInTemplateMixin",["dojo/_base/array","dojo/_base/declare","dojo/_base/lang","dojo/parser"],function(array,declare,lang,parser){return declare("dijit._WidgetsInTemplateMixin",null,{_earlyTemplatedStartup:!1,widgetsInTemplate:!0,contextRequire:null,_beforeFillContent:function(){if(this.widgetsInTemplate){var node=this.domNode;parser.parse(node,{noStart:!0,template:!0,inherited:{dir:this.dir,lang:this.lang,textDir:this.textDir},propsThis:this,contextRequire:this.contextRequire,scope:"dojo"}).then(lang.hitch(this,function(widgets){this._startupWidgets=widgets,this._attachTemplateNodes(widgets,function(n,p){return n[p]})}));if(!this._startupWidgets)throw new Error(this.declaredClass+": parser returned unfilled promise (probably waiting for module auto-load), "+"unsupported by _WidgetsInTemplateMixin.   Must pre-load all supporting widgets before instantiation.")}},startup:function(){array.forEach(this._startupWidgets,function(w){w&&!w._started&&w.startup&&w.startup()}),this._startupWidgets=null,this.inherited(arguments)}})})