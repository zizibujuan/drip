//>>built
define("dojo/text",["./_base/kernel","require","./has","./request"],function(dojo,require,has,request){var getText;getText=function(url,sync,load){request(url,{sync:!!sync}).then(load)};var theCache={},strip=function(text){if(text){text=text.replace(/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,"");var matches=text.match(/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im);matches&&(text=matches[1])}else text="";return text},notFound={},pending={};return dojo.cache=function(module,url,value){var key;typeof module=="string"?/\//.test(module)?(key=module,value=url):key=require.toUrl(module.replace(/\./g,"/")+(url?"/"+url:"")):(key=module+"",value=url);var val=value!=undefined&&typeof value!="string"?value.value:value,sanitize=value&&value.sanitize;return typeof val=="string"?(theCache[key]=val,sanitize?strip(val):val):val===null?(delete theCache[key],null):(key in theCache||getText(key,!0,function(text){theCache[key]=text}),sanitize?strip(theCache[key]):theCache[key])},{dynamic:!0,normalize:function(id,toAbsMid){var parts=id.split("!"),url=parts[0];return(/^\./.test(url)?toAbsMid(url):url)+(parts[1]?"!"+parts[1]:"")},load:function(id,require,load){var parts=id.split("!"),stripFlag=parts.length>1,absMid=parts[0],url=require.toUrl(parts[0]),requireCacheUrl="url:"+url,text=notFound,finish=function(text){load(stripFlag?strip(text):text)};absMid in theCache?text=theCache[absMid]:require.cache&&requireCacheUrl in require.cache?text=require.cache[requireCacheUrl]:url in theCache&&(text=theCache[url]);if(text===notFound)if(pending[url])pending[url].push(finish);else{var pendingList=pending[url]=[finish];getText(url,!require.async,function(text){theCache[absMid]=theCache[url]=text;for(var i=0;i<pendingList.length;)pendingList[i++](text);delete pending[url]})}else finish(text)}}})