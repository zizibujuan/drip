//>>built
define("dojo/router/RouterBase",["dojo/_base/declare","dojo/hash","dojo/topic"],function(declare,hash,topic){function fireRoute(params,currentPath,newPath){var queue,isStopped,isPrevented,eventObj,i,l;queue=this.callbackQueue,isStopped=!1,isPrevented=!1,eventObj={stopImmediatePropagation:function(){isStopped=!0},preventDefault:function(){isPrevented=!0},oldPath:currentPath,newPath:newPath,params:params};for(i=0,l=queue.length;i<l;++i)isStopped||queue[i](eventObj);return!isPrevented}var trim;String.prototype.trim?trim=function(str){return str.trim()}:trim=function(str){return str.replace(/^\s\s*/,"").replace(/\s\s*$/,"")};var RouterBase=declare(null,{_routes:null,_routeIndex:null,_started:!1,_currentPath:"",idMatch:/:(\w[\w\d]*)/g,idReplacement:"([^\\/]+)",globMatch:/\*(\w[\w\d]*)/,globReplacement:"(.+)",constructor:function(kwArgs){this._routes=[],this._routeIndex={};for(var i in kwArgs)kwArgs.hasOwnProperty(i)&&(this[i]=kwArgs[i])},register:function(route,callback){return this._registerRoute(route,callback)},registerBefore:function(route,callback){return this._registerRoute(route,callback,!0)},go:function(path,replace){var applyChange;return path=trim(path),applyChange=this._handlePathChange(path),applyChange&&hash(path,replace),applyChange},startup:function(){if(this._started)return;var self=this;this._started=!0,this._handlePathChange(hash()),topic.subscribe("/dojo/hashchange",function(){self._handlePathChange.apply(self,arguments)})},_handlePathChange:function(newPath){var i,j,li,lj,routeObj,result,allowChange,parameterNames,params,routes=this._routes,currentPath=this._currentPath;if(!this._started||newPath===currentPath)return allowChange;allowChange=!0;for(i=0,li=routes.length;i<li;++i){routeObj=routes[i],result=routeObj.route.exec(newPath);if(result){if(routeObj.parameterNames){parameterNames=routeObj.parameterNames,params={};for(j=0,lj=parameterNames.length;j<lj;++j)params[parameterNames[j]]=result[j+1]}else params=result.slice(1);allowChange=routeObj.fire(params,currentPath,newPath)}}return allowChange&&(this._currentPath=newPath),allowChange},_convertRouteToRegExp:function(route){return route=route.replace(this.idMatch,this.idReplacement),route=route.replace(this.globMatch,this.globReplacement),route="^"+route+"$",new RegExp(route)},_getParameterNames:function(route){var idMatch=this.idMatch,globMatch=this.globMatch,parameterNames=[],match;idMatch.lastIndex=0;while((match=idMatch.exec(route))!==null)parameterNames.push(match[1]);return(match=globMatch.exec(route))!==null&&parameterNames.push(match[1]),parameterNames.length>0?parameterNames:null},_indexRoutes:function(){var i,l,route,routeIndex,routes=this._routes;routeIndex=this._routeIndex={};for(i=0,l=routes.length;i<l;++i)route=routes[i],routeIndex[route.route]=i},_registerRoute:function(route,callback,isBefore){var index,exists,routeObj,callbackQueue,removed,self=this,routes=this._routes,routeIndex=this._routeIndex;return index=this._routeIndex[route],exists=typeof index!="undefined",exists&&(routeObj=routes[index]),routeObj||(routeObj={route:route,callbackQueue:[],fire:fireRoute}),callbackQueue=routeObj.callbackQueue,typeof route=="string"&&(routeObj.parameterNames=this._getParameterNames(route),routeObj.route=this._convertRouteToRegExp(route)),isBefore?callbackQueue.unshift(callback):callbackQueue.push(callback),exists||(index=routes.length,routeIndex[route]=index,routes.push(routeObj)),removed=!1,{remove:function(){var i,l;if(removed)return;for(i=0,l=callbackQueue.length;i<l;++i)callbackQueue[i]===callback&&callbackQueue.splice(i,1);callbackQueue.length===0&&(routes.splice(index,1),self._indexRoutes()),removed=!0},register:function(callback,isBefore){return self.register(route,callback,isBefore)}}}});return RouterBase})