//>>built
define("dojo/promise/instrumentation",["./tracer","../has","../_base/lang","../_base/array"],function(tracer,has,lang,arrayUtil){function logError(error,rejection,deferred){var stack="";error&&error.stack&&(stack+=error.stack),rejection&&rejection.stack&&(stack+="\n    ----------------------------------------\n    rejected"+rejection.stack.split("\n").slice(1).join("\n").replace(/^\s+/," ")),deferred&&deferred.stack&&(stack+="\n    ----------------------------------------\n"+deferred.stack),0}function reportRejections(error,handled,rejection,deferred){handled||logError(error,rejection,deferred)}function trackUnhandledRejections(error,handled,rejection,deferred){handled?arrayUtil.some(errors,function(obj,ix){if(obj.error===error)return errors.splice(ix,1),!0}):arrayUtil.some(errors,function(obj){return obj.error===error})||errors.push({error:error,rejection:rejection,deferred:deferred,timestamp:(new Date).getTime()}),activeTimeout||(activeTimeout=setTimeout(logRejected,unhandledWait))}function logRejected(){var now=(new Date).getTime(),reportBefore=now-unhandledWait;errors=arrayUtil.filter(errors,function(obj){return obj.timestamp<reportBefore?(logError(obj.error,obj.rejection,obj.deferred),!1):!0}),errors.length?activeTimeout=setTimeout(logRejected,errors[0].timestamp+unhandledWait-now):activeTimeout=!1}var errors=[],activeTimeout=!1,unhandledWait=1e3;return function(Deferred){var usage=has("config-useDeferredInstrumentation");if(usage){tracer.on("resolved",lang.hitch(console,"log","resolved")),tracer.on("rejected",lang.hitch(console,"log","rejected")),tracer.on("progress",lang.hitch(console,"log","progress"));var args=[];typeof usage=="string"&&(args=usage.split(","),usage=args.shift());if(usage==="report-rejections")Deferred.instrumentRejected=reportRejections;else{if(usage!=="report-unhandled-rejections"&&usage!==!0&&usage!==1)throw new Error("Unsupported instrumentation usage <"+usage+">");Deferred.instrumentRejected=trackUnhandledRejections,unhandledWait=parseInt(args[0],10)||unhandledWait}}}})