//>>built
define("dojo/behavior",["./_base/kernel","./_base/lang","./_base/array","./_base/connect","./query","./domReady"],function(dojo,lang,darray,connect,query,domReady){dojo.deprecated("dojo.behavior","Use dojo/on with event delegation (on.selector())");var Behavior=function(){function arrIn(obj,name){return obj[name]||(obj[name]=[]),obj[name]}function forIn(obj,scope,func){var tmpObj={};for(var x in obj)typeof tmpObj[x]=="undefined"&&(func?func.call(scope,obj[x],x):scope(obj[x],x))}var _inc=0;this._behaviors={},this.add=function(behaviorObj){forIn(behaviorObj,this,function(behavior,name){var tBehavior=arrIn(this._behaviors,name);typeof tBehavior["id"]!="number"&&(tBehavior.id=_inc++);var cversion=[];tBehavior.push(cversion);if(lang.isString(behavior)||lang.isFunction(behavior))behavior={found:behavior};forIn(behavior,function(rule,ruleName){arrIn(cversion,ruleName).push(rule)})})};var _applyToNode=function(node,action,ruleSetName){lang.isString(action)?ruleSetName=="found"?connect.publish(action,[node]):connect.connect(node,ruleSetName,function(){connect.publish(action,arguments)}):lang.isFunction(action)&&(ruleSetName=="found"?action(node):connect.connect(node,ruleSetName,action))};this.apply=function(){forIn(this._behaviors,function(tBehavior,id){query(id).forEach(function(elem){var runFrom=0,bid="_dj_behavior_"+tBehavior.id;if(typeof elem[bid]=="number"){runFrom=elem[bid];if(runFrom==tBehavior.length)return}for(var x=runFrom,tver;tver=tBehavior[x];x++)forIn(tver,function(ruleSet,ruleSetName){lang.isArray(ruleSet)&&darray.forEach(ruleSet,function(action){_applyToNode(elem,action,ruleSetName)})});elem[bid]=tBehavior.length})})}};return dojo.behavior=new Behavior,domReady(function(){dojo.behavior.apply()}),dojo.behavior})