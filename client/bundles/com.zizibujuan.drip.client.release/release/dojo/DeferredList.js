//>>built
define("dojo/DeferredList",["./_base/kernel","./_base/Deferred","./_base/array"],function(dojo,Deferred,darray){return dojo.DeferredList=function(list,fireOnOneCallback,fireOnOneErrback,consumeErrors,canceller){var resultList=[];Deferred.call(this);var self=this;list.length===0&&!fireOnOneCallback&&this.resolve([0,[]]);var finished=0;darray.forEach(list,function(item,i){function addResult(succeeded,result){resultList[i]=[succeeded,result],finished++,finished===list.length&&self.resolve(resultList)}item.then(function(result){fireOnOneCallback?self.resolve([i,result]):addResult(!0,result)},function(error){fireOnOneErrback?self.reject(error):addResult(!1,error);if(consumeErrors)return null;throw error})})},dojo.DeferredList.prototype=new Deferred,dojo.DeferredList.prototype.gatherResults=function(deferredList){var d=new dojo.DeferredList(deferredList,!1,!0,!1);return d.addCallback(function(results){var ret=[];return darray.forEach(results,function(result){ret.push(result[1])}),ret}),d},dojo.DeferredList})