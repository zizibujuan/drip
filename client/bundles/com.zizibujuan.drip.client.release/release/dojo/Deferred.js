//>>built
define("dojo/Deferred",["./has","./_base/lang","./errors/CancelError","./promise/Promise","require"],function(has,lang,CancelError,Promise,instrumentation){"use strict";var PROGRESS=0,RESOLVED=1,REJECTED=2,FULFILLED_ERROR_MESSAGE="This deferred has already been fulfilled.",freezeObject=Object.freeze||function(){},signalWaiting=function(waiting,type,result,rejection,deferred){for(var i=0;i<waiting.length;i++)signalListener(waiting[i],type,result,rejection)},signalListener=function(listener,type,result,rejection){var func=listener[type],deferred=listener.deferred;if(func)try{var newResult=func(result);if(type===PROGRESS)typeof newResult!="undefined"&&signalDeferred(deferred,type,newResult);else{if(newResult&&typeof newResult.then=="function"){listener.cancel=newResult.cancel,newResult.then(makeDeferredSignaler(deferred,RESOLVED),makeDeferredSignaler(deferred,REJECTED),makeDeferredSignaler(deferred,PROGRESS));return}signalDeferred(deferred,RESOLVED,newResult)}}catch(error){signalDeferred(deferred,REJECTED,error)}else signalDeferred(deferred,type,result)},makeDeferredSignaler=function(deferred,type){return function(value){signalDeferred(deferred,type,value)}},signalDeferred=function(deferred,type,result){if(!deferred.isCanceled())switch(type){case PROGRESS:deferred.progress(result);break;case RESOLVED:deferred.resolve(result);break;case REJECTED:deferred.reject(result)}},Deferred=function(canceler){var promise=this.promise=new Promise,deferred=this,fulfilled,result,rejection,canceled=!1,waiting=[];this.isResolved=promise.isResolved=function(){return fulfilled===RESOLVED},this.isRejected=promise.isRejected=function(){return fulfilled===REJECTED},this.isFulfilled=promise.isFulfilled=function(){return!!fulfilled},this.isCanceled=promise.isCanceled=function(){return canceled},this.progress=function(update,strict){if(!fulfilled)return signalWaiting(waiting,PROGRESS,update,null,deferred),promise;if(strict===!0)throw new Error(FULFILLED_ERROR_MESSAGE);return promise},this.resolve=function(value,strict){if(!fulfilled)return signalWaiting(waiting,fulfilled=RESOLVED,result=value,null,deferred),waiting=null,promise;if(strict===!0)throw new Error(FULFILLED_ERROR_MESSAGE);return promise};var reject=this.reject=function(error,strict){if(!fulfilled)return signalWaiting(waiting,fulfilled=REJECTED,result=error,rejection,deferred),waiting=null,promise;if(strict===!0)throw new Error(FULFILLED_ERROR_MESSAGE);return promise};this.then=promise.then=function(callback,errback,progback){var listener=[progback,callback,errback];return listener.cancel=promise.cancel,listener.deferred=new Deferred(function(reason){return listener.cancel&&listener.cancel(reason)}),fulfilled&&!waiting?signalListener(listener,fulfilled,result,rejection):waiting.push(listener),listener.deferred.promise},this.cancel=promise.cancel=function(reason,strict){if(!fulfilled){if(canceler){var returnedReason=canceler(reason);reason=typeof returnedReason=="undefined"?reason:returnedReason}canceled=!0;if(!fulfilled)return typeof reason=="undefined"&&(reason=new CancelError),reject(reason),reason;if(fulfilled===REJECTED&&result===reason)return reason}else if(strict===!0)throw new Error(FULFILLED_ERROR_MESSAGE)},freezeObject(promise)};return Deferred.prototype.toString=function(){return"[object Deferred]"},instrumentation&&instrumentation(Deferred),Deferred})